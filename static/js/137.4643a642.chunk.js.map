{"version":3,"file":"static/js/137.4643a642.chunk.js","mappings":"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","sources":["components/Calendar/Calendar.styled.jsx","components/Calendar/Calendar.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/Title/Title.styled.js","components/Title/Title.jsx","components/DayDashboard/DayDashboard.styled.jsx","components/DayDashboardList/DayDashboardList.styled.jsx","components/DayDashboardList/DayDashboardList.jsx","components/DayDashboard/DayDashboard.jsx","components/DiaryCalendar/DiaryCalendar.styled.jsx","components/DateSwitchButton/DateSwitchButton.styled.jsx","components/DateSwitchButton/DateSwitchButton.jsx","components/DiaryCalendar/DiaryCalendar.jsx","components/DiaryTitleContainer/DiaryTitleContainer.styled.jsx","components/DiaryTitleContainer/DiaryTitleContainer.jsx","components/DiaryDashboardContainer/DiaryDashboardContainer.styled.jsx","components/DiaryDashboardContainer/DiaryDashboardContainer.jsx","components/DayExercises/DayExercises.styled.jsx","components/DayExercises/DayExercises.jsx","components/DayProducts/DayProducts.styled.jsx","components/ProductsTable/ProductsTable.styled.jsx","components/ProductsTable/ProductsTable.jsx","components/DayProducts/DayProducts.jsx","components/DiaryTablesCont/DiaryTablesCont.styled.jsx","components/DiaryTablesCont/DiaryTablesCont.jsx","pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker__wrapper {\n    position: absolute;\n  }\n  .react-datepicker {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: 215px;\n    height: 236px;\n    transform: translate(-15%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    padding: 14px;\n    background-color: #ef8964;\n    font-family: 'Roboto', sans-serif;\n    border-radius: 8px;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 14px;\n    margin-bottom: 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;\n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: normal;\n    margin-bottom: 14px;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    color: rgba(239, 237, 232, 0.5);\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n  }\n  .react-datepicker__navigation {\n    margin-top: 14px;\n    color: white;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: white;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: white;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    flex-shrink: 0;\n    margin: 0;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n    width: 24px;\n    height: 24px;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 5px;\n    flex-direction: column;\n    justify-content: space-between;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: #040404;\n    color: #efede8;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: white;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--outside-month {\n    opacity: 50%;\n  }\n  .react-datepicker__triangle {\n    display: none;\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport { DatePickerWrapper } from './Calendar.styled';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\n\nexport const Calendar = ({ input, selectedDate, setSelectedDate }) => {\n  return (\n    <DatePickerWrapper>\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => {\n          setSelectedDate(date);\n        }}\n        customInput={input}\n        calendarStartDay={1}\n      />\n    </DatePickerWrapper>\n  );\n};\n\nCalendar.propTypes = {\n  input: PropTypes.element.isRequired,\n  selectedDate: PropTypes.instanceOf(Date).isRequired,\n  setSelectedDate: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  max-width: 375px;\n  margin: 0 auto;\n  padding: 62px 20px 0 20px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 84px 32px 0 32px;\n  }\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n    padding: 84px 96px 0 96px;\n  }\n`;\n","import { MainContainer } from './Container.styled';\n\nexport const Container = ({ children }) => {\n  return <MainContainer>{children}</MainContainer>;\n};\n","import  styled  from '@emotion/styled';\n\nexport const H1 = styled.h1`\nfont-family: Roboto;\nfont-size: 24px;\nfont-style: normal;\nfont-weight: 700;\nline-height: 1.16;\n\n @media (min-width: 768px){\nfont-size: 32px;\nline-height: 1.37; \n }\n  @media (min-width: 1440px){\n \n\n }\n`\n","import { H1 } from \"./Title.styled\"\nimport PropTypes from 'prop-types';\n\n\nexport const Title = ({ children }) => {\n    return (\n        <H1>{children}</H1>\n    )\n}\n\nTitle.propTypes = {\n  children: PropTypes.string,\n//   margin: PropTypes.number,\n};\n\n","import styled from '@emotion/styled';\n\nexport const DayDashboardCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (min-width: 768px) {\n    max-width: 593px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 390px;\n  }\n`;\n\nexport const WarningCont = styled.div`\n  padding-left: 32px;\n  display: flex;\n  gap: 8px;\n  position: relative;\n\n  @media (min-width: 768px) {\n    padding: 0;\n  }\n`;\n\nexport const WarningIMG = styled.svg`\n  stroke: #efede8;\n  fill: #ef8964;\n  stroke-width: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  @media (min-width: 768px) {\n    position: relative;\n  }\n`;\n\nexport const WarningText = styled.p`\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  line-height: 18px;\n  max-width: 303px;\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n    max-width: 561px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 358px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px 13px;\n  margin-bottom: 20px;\n\n  @media (min-width: 768px) {\n    gap: 16px;\n    margin-bottom: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-bottom: 48px;\n  }\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 13px) / 2);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 96px;\n  padding: 14px;\n  justify-content: space-between;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n\n  :nth-of-type(-n + 2) {\n    background: #e6533c;\n  }\n\n  @media (min-width: 768px) {\n    flex-basis: calc((100% - 32px) / 3);\n    min-height: 116px;\n    order: ${({ order }) => (order ? order : 'unset')};\n  }\n\n  @media (min-width: 1440px) {\n    flex-basis: calc((100% - 16px) / 2);\n    order: unset;\n  }\n`;\n\nexport const CardNameCont = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Title = styled.p`\n  color: ${({ color }) => color};\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n\n  ::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nexport const Value = styled.p`\n  color: #efede8;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 20px;\n\n  @media (min-width: 768px) {\n    line-height: 32px;\n  }\n`;\n\nexport const Imagen = styled.svg`\n  fill: #ef8964;\n`;\n","import sprite from '../../assets/icons/svg-sprite.svg';\nimport {\n  List,\n  Item,\n  Title,\n  CardNameCont,\n  Value,\n  Imagen,\n} from './DayDashboardList.styled';\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\nexport const DayDashboardList = ({ data }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const handleResize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <List>\n      {data.map(({ icon, title }, index) => {\n        const color =\n          index < 2 ? 'rgba(239, 237, 232, 0.8)' : 'rgba(239, 237, 232, 0.4)';\n\n        const order =\n          windowWidth >= 768 ? (index % 2 === 0 ? 1 : 2) : index + 1;\n\n        return (\n          <Item key={index} order={order}>\n            <CardNameCont>\n              <Imagen width=\"20\" height=\"20\">\n                <use href={sprite + icon}></use>\n              </Imagen>\n              <Title color={color}>{title}</Title>\n            </CardNameCont>\n            <Value>\n              {0}\n              {index === 1 || index === 5 ? ' min' : ''}\n            </Value>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nDayDashboardList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      icon: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import {\n  DayDashboardCont,\n  WarningCont,\n  WarningText,\n  WarningIMG,\n} from './DayDashboard.styled';\nimport { DayDashboardList } from 'components/DayDashboardList/DayDashboardList';\nimport sprite from '../../assets/icons/svg-sprite.svg';\n\nexport const DayDashboard = () => {\n  const dashBoardData = [\n    { icon: '#icon-cutlery', title: 'daily calorie intake' },\n    { icon: '#icon-dumbbell', title: 'daily norm of sports' },\n    { icon: '#icon-apple', title: 'calories consumed' },\n    { icon: '#icon-calories', title: 'calories burned' },\n    { icon: '#icon-bubble', title: 'the rest of the calories' },\n    { icon: '#icon-running', title: 'the rest of sports' },\n  ];\n\n  return (\n    <DayDashboardCont>\n      <DayDashboardList data={dashBoardData} />\n      <WarningCont>\n        <WarningIMG width=\"24\" height=\"24\">\n          <use href={sprite + '#icon-warning'}></use>\n        </WarningIMG>\n        <WarningText img={sprite + '#icon-warning'}>\n          Record all your meals in a calorie diary every day. This will help me\n          be aware of my nutrition and make me responsible for my choices.\n        </WarningText>\n      </WarningCont>\n    </DayDashboardCont>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const TitleWrapper = styled.button`\n  display: flex;\n  color: #efede8;\n  font-family: 'Roboto', sans-serif;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 20px;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  background-color: inherit;\n  padding: 0;\n  gap: 8px;\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n    font-weight: 700;\n    line-height: 32px;\n  }\n`;\n\nexport const CalendarIMG = styled.svg`\n  stroke: #ef8964;\n  width: 20px;\n  height: 20px;\n\n  @media (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const DateSwitcherCont = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n\n  @media (min-width: 768px) {\n    gap: 40px;\n  }\n`;\n\nexport const DateSwitcherBtnCont = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;\n","import styled from '@emotion/styled';\n\nexport const DateSwitcherBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  background-color: inherit;\n  padding: 0;\n  cursor: pointer;\n  transform: rotate(270deg);\n\n  svg {\n    stroke: ${({ color }) => color};\n  }\n\n  :last-of-type {\n    transform: rotate(90deg);\n\n    svg {\n      stroke: #efede8;\n    }\n  }\n`;","import { DateSwitcherBtn } from \"./DateSwitchButton.styled\";\nimport sprite from '../../assets/icons/svg-sprite.svg';\nimport PropTypes from 'prop-types';\n\nexport const DateSwitchButton = ({ onClick, disabled, color, icon }) => {\n  return (\n    <DateSwitcherBtn\n      type=\"button\"\n      onClick={onClick}\n      disabled={disabled}\n      color={color}\n    >\n      <svg width=\"16\" height=\"16\">\n        <use href={sprite + icon}></use>\n      </svg>\n    </DateSwitcherBtn>\n  );\n};\n\nDateSwitchButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  color: PropTypes.string,\n  icon: PropTypes.string, \n};","import { forwardRef, useState } from 'react';\nimport sprite from '../../assets/icons/svg-sprite.svg';\nimport {\n  TitleWrapper,\n  CalendarIMG,\n  DateSwitcherCont,\n  DateSwitcherBtnCont,\n} from './DiaryCalendar.styled';\nimport { format } from 'date-fns';\nimport { DateSwitchButton } from 'components/DateSwitchButton/DateSwitchButton';\nimport { Calendar } from 'components/Calendar/Calendar';\n\nexport const DiaryCalendar = () => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  // eslint-disable-next-line\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const toPreviosDay = () => {\n    const previosDate = new Date(selectedDate);\n    previosDate.setDate(previosDate.getDate() - 1);\n\n    setSelectedDate(previosDate);\n  };\n\n  const toNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n\n    setSelectedDate(nextDate);\n  };\n\n  const CustomInput = forwardRef(({ value, onClick }, ref) => {\n    return (\n      <DateSwitcherCont>\n        <TitleWrapper onClick={onClick} ref={ref} type='button'>\n          {format(selectedDate, 'dd/MM/yyyy')}\n          <CalendarIMG>\n            <use href={sprite + '#icon-calendar'}></use>\n          </CalendarIMG>\n        </TitleWrapper>\n        <DateSwitcherBtnCont>\n          <DateSwitchButton\n            onClick={toPreviosDay}\n            disabled={isDisabled}\n            color={isDisabled ? '#EFEDE833' : '#efede8'}\n            icon=\"#icon-chevronup\"\n          />\n          <DateSwitchButton onClick={toNextDay} icon=\"#icon-chevronup\" />\n        </DateSwitcherBtnCont>\n      </DateSwitcherCont>\n    );\n  });\n\n  return (\n    <Calendar\n      input={<CustomInput />}\n      selectedDate={selectedDate}\n      setSelectedDate={setSelectedDate}\n    />\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  padding-top: 40px;\n\n  @media (min-width: 768px) {\n    padding-top: 52px;\n    min-height: 116px;\n    align-items: flex-start;\n\n    h1 {\n      align-self: flex-end;\n    }\n  }\n`;\n","import { Container } from './DiaryTitleContainer.styled';\n\nexport const DiaryTitleContainer = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  padding-top: 40px;\n  gap: 40px;\n\n  @media (min-width: 768px) {\n    padding-top: 32px;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 64px;\n  }\n\n  @media (min-width: 1440px) {\n    padding-top: 32px;\n    flex-direction: row;\n    gap: 0;\n    justify-content: space-between;\n  }\n`;\n","import {Container} from './DiaryDashboardContainer.styled'\n\nexport const DiaryDashboardContainer = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n","import styled from '@emotion/styled';\n\nexport const ProductWrapper = styled.div`\n  border: 1px solid #efede820;\n  border-radius: 12px;\n  padding: 16px;\n  width: 100%;\n  min-height: 335px;\n  background-color: #efede805;\n  @media (min-width: 768px) {\n    min-height: auto;\n    height: 234px;\n    width: 704px;\n  }\n  @media (min-width: 1440px) {\n    width: 826px;\n  }\n`;\n\nexport const TitleNav = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const TitleP = styled.p`\n  color: #efede880;\n  font-size: 14px;\n  line-height: 18px;\n`;\n\nexport const WrapperA = styled.div`\n  &:hover span {\n    color: #efede8;\n  }\n`;\n\nexport const NavP = styled.span`\n  color: #e6533c;\n  font-size: 14px;\n  line-height: 18px;\n  font-weight: 500;\n  transition: color 300ms;\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n\nexport const SvgStyle = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 8px;\n`;\n\nexport const NotProduct = styled.p`\n  color: #efede84d;\n  font-size: 14px;\n  line-height: 18px;\n  text-align: center;\n  margin-top: 125px;\n  @media (min-width: 768px) {\n    margin-top: 65px;\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n","import {\n  NotProduct,\n  ProductWrapper,\n  TitleNav,\n  TitleP,\n  SvgStyle,\n  WrapperA,\n  NavP,\n} from './DayExercises.styled';\nimport ico from '../../assets/icons/svg-sprite.svg'\n\nimport { NavLink } from \"react-router-dom\";\n\n\n\nexport const DayExercises = () => {\n  return (\n    <ProductWrapper>\n      <TitleNav>\n        <TitleP>Exercises</TitleP>\n        <WrapperA>\n        <NavLink to=\"/exercises\" style={{display:'flex', alignItems:'center'}}>\n          <NavP>Add exercise</NavP>\n          <SvgStyle >\n            <use href={ico + `#icon-nextarrow`}></use>\n          </SvgStyle>\n        </NavLink>\n        </WrapperA>\n\n      </TitleNav>\n      <NotProduct>Not found exercises</NotProduct>\n    </ProductWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ProductWrapper = styled.div`\n  border: 1px solid #efede820;\n  border-radius: 12px;\n  padding: 16px;\n  width: 100%;\n  min-height: 335px;\n  max-height: 824px;\n  overflow: scroll;\n  background-color: #EFEDE80D;\n  @media (min-width: 768px) {\n    min-height: auto;\n    max-height: auto;\n    height: 234px;\n    width: 704px;\n  }\n  @media (min-width: 1440px) {\n    width: 826px;\n  }\n`;\n\nexport const TitleNav = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 48px;\n`;\n\nexport const TitleP = styled.p`\n  color: #efede880;\n  font-size: 14px;\n  line-height: 18px;\n`;\n\nexport const WrapperA = styled.div`\n  &:hover span {\n    color: #efede8;\n  }\n`;\n\nexport const NavP = styled.span`\n  color: #e6533c;\n  font-size: 14px;\n  line-height: 18px;\n  font-weight: 500;\n  transition: color 300ms;\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n\nexport const SvgStyle = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 8px;\n`;\n\nexport const NotProduct = styled.p`\n  color: #efede84d;\n  font-size: 14px;\n  line-height: 18px;\n  text-align: center;\n  margin-top: 125px;\n  @media (min-width: 768px) {\n    margin-top: 65px;\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const TitleColumn = styled.span`\ncolor: #EF8964;\nfont-size: 12px;\nline-height: 18px;\nposition: absolute;\nleft: 0;\ntop: -26px;\n  @media (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const TitleHead = styled.thead`\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\nexport const RowTel = styled.tr`\n  display: flex;\n  margin-bottom: 66px;\n  flex-wrap: wrap;\n`;\n\nexport const CellTel = styled.td`\n  &:nth-of-type(1) {\n    width: 297px;\n    height: 38px;\n    padding: 10px 14px 10px 14px;\n    border-radius: 12px;\n    border: 1px solid #efede84d;\n    color: #efede8;\n    font-size: 14px;\n    line-height: 18px;\n    position: relative;\n    margin-bottom: 42px;\n  }\n  &:nth-of-type(2) {\n    width: 297px;\n    height: 38px;\n    padding: 10px 14px 10px 14px;\n    border-radius: 12px;\n    border: 1px solid #efede84d;\n    color: #efede8;\n    font-size: 14px;\n    line-height: 18px;\n    position: relative;\n    margin-bottom: 42px;\n  }\n  &:nth-of-type(3) {\n    width: 81px;\n    height: 38px;\n    padding: 10px 14px 10px 14px;\n    border-radius: 12px;\n    border: 1px solid #efede84d;\n    color: #efede8;\n    font-size: 14px;\n    line-height: 18px;\n    position: relative;\n    margin-right: 16px;\n  }\n  &:nth-of-type(4) {\n    width: 80px;\n    height: 38px;\n    padding: 10px 14px 10px 14px;\n    border-radius: 12px;\n    border: 1px solid #efede84d;\n    color: #efede8;\n    font-size: 14px;\n    line-height: 18px;\n    position: relative;\n    margin-right: 16px;\n  }\n  &:nth-of-type(5) {\n    width: 76px;\n    height: 38px;\n    padding: 10px 14px 10px 14px;\n    border-radius: 12px;\n    border: 1px solid #efede84d;\n    color: #efede8;\n    font-size: 14px;\n    line-height: 18px;\n    position: relative;\n    margin-right: 8px;\n  }\n  \n`;\n","import {\n  useReactTable,\n  getCoreRowModel,\n  flexRender,\n} from '@tanstack/react-table';\nimport mData from './users.json';\nimport { useMemo } from 'react';\n\nimport { TitleColumn, TitleHead, RowTel, CellTel } from './ProductsTable.styled';\n\nexport default function ProductsTable() {\n  const data = useMemo(() => mData, []);\n\n  const columns = [\n    {\n      header: 'Title',\n      accessorKey: 'Title',\n    },\n    {\n      header: 'Category',\n      accessorKey: 'Category',\n    },\n    {\n      header: 'Calories',\n      accessorKey: 'Calories',\n    },\n    {\n      header: 'Weight',\n      accessorKey: 'Weight',\n    },\n    {\n      header: 'Recommend',\n      accessorKey: 'Recommend',\n    },\n  ];\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <div>\n      <table>\n        <TitleHead>\n          {table.getHeaderGroups().map(headerGroup => (\n            <tr key={headerGroup.id}>\n              {headerGroup.headers.map(header => (\n                <th key={header.id}>\n                  {flexRender(\n                    header.column.columnDef.header,\n                    header.getContext()\n                  )}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </TitleHead>\n        <tbody>\n          {table.getRowModel().rows.map(row => (\n            <RowTel key={row.id}>\n              {row.getVisibleCells().map(cell => (\n                <CellTel key={cell.id}>\n                    <TitleColumn>{cell.column.id}</TitleColumn>\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                </CellTel>\n              ))}\n              <td>T</td>\n            </RowTel>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import {\n  NotProduct,\n  ProductWrapper,\n  TitleNav,\n  TitleP,\n  SvgStyle,\n  WrapperA,\n  NavP,\n} from './DayProducts.styled';\nimport ico from '../../assets/icons/svg-sprite.svg';\nimport ProductsTable from 'components/ProductsTable/ProductsTable';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const DayProducts = () => {\n  const isVoid = true;\n\n  return (\n    <ProductWrapper>\n      <TitleNav>\n        <TitleP>Products</TitleP>\n        <WrapperA>\n          <NavLink\n            to=\"/products\"\n            style={{ display: 'flex', alignItems: 'center' }}\n          >\n            <NavP>Add product</NavP>\n            <SvgStyle>\n              <use href={ico + `#icon-nextarrow`}></use>\n            </SvgStyle>\n          </NavLink>\n        </WrapperA>\n      </TitleNav>\n      {isVoid ? <ProductsTable /> :\n      <NotProduct>Not found products</NotProduct>}\n    </ProductWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 40px;\n\n  @media (min-width: 768px) {\n    gap: 32px;\n  }\n`;","import { Container } from \"./DiaryTablesCont.styled\"\n\nexport const DiaryTablesCont = ({ children }) => {\n  return <Container>{children}</Container>;\n};","import { Container } from 'components/Container/Container';\nimport { DayDashboard } from 'components/DayDashboard/DayDashboard';\nimport { Title } from '../../components/Title/Title';\nimport { DiaryCalendar } from 'components/DiaryCalendar/DiaryCalendar';\nimport { DiaryTitleContainer } from 'components/DiaryTitleContainer/DiaryTitleContainer';\nimport { DiaryDashboardContainer } from 'components/DiaryDashboardContainer/DiaryDashboardContainer';\nimport { DayExercises } from 'components/DayExercises/DayExercises';\nimport { DayProducts } from 'components/DayProducts/DayProducts';\nimport { DiaryTablesCont } from 'components/DiaryTablesCont/DiaryTablesCont';\n\nconst DiaryPage = () => {\n  return (\n    <Container>\n      <DiaryTitleContainer>\n        <Title>{'Diary'}</Title>\n        <DiaryCalendar />\n      </DiaryTitleContainer>\n      <DiaryDashboardContainer>\n        <DiaryTablesCont>\n          <DayProducts />\n          <DayExercises />\n        </DiaryTablesCont>\n        <DayDashboard />\n      </DiaryDashboardContainer>\n    </Container>\n  );\n};\n\nexport default DiaryPage;\n"],"names":["DatePickerWrapper","styled","Calendar","input","selectedDate","setSelectedDate","selected","onChange","date","customInput","calendarStartDay","MainContainer","Container","children","H1","Title","DayDashboardCont","WarningCont","WarningIMG","WarningText","List","Item","order","CardNameCont","color","Value","Imagen","DayDashboardList","data","useState","window","innerWidth","windowWidth","setWindowWidth","handleResize","useEffect","addEventListener","removeEventListener","map","index","icon","title","width","height","href","sprite","DayDashboard","img","TitleWrapper","CalendarIMG","DateSwitcherCont","DateSwitcherBtnCont","DateSwitcherBtn","DateSwitchButton","onClick","disabled","type","DiaryCalendar","Date","isDisabled","toPreviosDay","previosDate","setDate","getDate","toNextDay","nextDate","CustomInput","forwardRef","ref","value","format","DiaryTitleContainer","DiaryDashboardContainer","ProductWrapper","TitleNav","TitleP","WrapperA","NavP","SvgStyle","NotProduct","DayExercises","to","style","display","alignItems","ico","TitleColumn","TitleHead","RowTel","CellTel","ProductsTable","useMemo","mData","table","useReactTable","columns","header","accessorKey","getCoreRowModel","getHeaderGroups","headerGroup","headers","flexRender","column","columnDef","getContext","id","getRowModel","rows","row","getVisibleCells","cell","DayProducts","DiaryTablesCont"],"sourceRoot":""}