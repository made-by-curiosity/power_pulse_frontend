{"version":3,"file":"static/js/503.ee87f789.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/MainButton/MainButton.styled.jsx","components/MainButton/MainButton.jsx","components/Title/Title.styled.js","components/Title/Title.jsx","components/ProductsList/ProductsList.styled.jsx","components/ModalAddProduct/ModalAddProduct.styled.jsx","components/ModalAddProduct/ModalAddProduct.jsx","components/ModalAddProductSuccess/ModalAddProductSuccess.styled.jsx","components/ModalAddProductSuccess/ModalAddProductSuccess.jsx","components/ProductsList/ProductsList.jsx","pages/ProductsPage/ProductsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  max-width: 375px;\n  margin: 0 auto;\n  padding: 62px 20px 0 20px;\n\n  position: relative;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 84px 32px 0 32px;\n  }\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n    height: 100vh;\n    padding: 84px 96px 0 96px;\n  }\n`;\n","import { MainContainer } from './Container.styled';\n\nexport const Container = ({ children }) => {\n  return <MainContainer>{children}</MainContainer>;\n};\n","import styled from '@emotion/styled';\n\nconst breakpoints = [320, 768, 1440];\n\nconst mq = breakpoints.map(bp => `@media screen and (min-width: ${bp}px)`);\n\nexport const Btn = styled.button`\n  cursor: pointer;\n\n  padding: ${({ modalButton, filled }) =>\n    modalButton ? (filled ? '12px 32px' : '12px 36px') : '12px 40px'};\n\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  font-family: 'Roboto', sans-serif;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.13;\n  color: #efede8;\n\n  background-color: ${props => (props.filled ? '#e6533c' : 'transparent')};\n\n  border: 1px solid;\n  border-color: ${props =>\n    props.filled ? '#e6533c' : 'rgba(239, 237, 232, 0.30)'};\n  border-radius: 12px;\n\n  transition: background-color 0.2s ease-out, border-color 0.2s ease-out;\n\n  &:hover:not([disabled]),\n  &:focus:not([disabled]) {\n    background-color: ${props => (props.filled ? '#ef8964' : 'transparent')};\n    border-color: ${props => (props.filled ? '#ef8964' : '#e6533c')};\n  }\n\n  &:disabled {\n    color: rgba(239, 237, 232, 0.6);\n  }\n\n  ${props => props.btnStyles}\n\n  ${mq[1]} {\n    padding: 16px 60px;\n    padding: ${({ modalButton, filled }) =>\n      modalButton ? (filled ? '14px 32px' : '14px 40px') : '16px 60px'};\n\n    font-size: ${({ modalButton, filled }) =>\n      modalButton && filled ? '16px' : '20px'};\n    line-height: ${({ modalButton, filled }) =>\n      modalButton && filled ? '1.5' : '1.2'};\n  }\n`;\n","import { Btn } from './MainButton.styled';\n\nexport const MainButton = ({\n  type,\n  text,\n  filled,\n  disabled,\n  btnStyles,\n  modalButton,\n  onClick,\n}) => {\n  return (\n    <Btn\n      type={type}\n      filled={filled}\n      disabled={disabled}\n      btnStyles={btnStyles}\n      modalButton={modalButton}\n      onClick={onClick}\n    >\n      {text}\n    </Btn>\n  );\n};\n","import  styled  from '@emotion/styled';\n\nexport const H1 = styled.h1`\nfont-family: Roboto;\nfont-size: 24px;\nfont-style: normal;\nfont-weight: 700;\nline-height: 1.16;\n\n @media (min-width: 768px){\nfont-size: 32px;\nline-height: 1.37; \n }\n  @media (min-width: 1440px){\n \n\n }\n`\n","import { H1 } from \"./Title.styled\"\nimport PropTypes from 'prop-types';\n\n\nexport const Title = ({ children }) => {\n    return (\n        <H1>{children}</H1>\n    )\n}\n\nTitle.propTypes = {\n  children: PropTypes.string,\n//   margin: PropTypes.number,\n};\n\n","import styled from '@emotion/styled';\n\nexport const ProductsContainer = styled.div`\n  @media (min-width: 768px) {\n    overflow-y: scroll;\n    height: 507px;\n    gap: 32px 16px;\n  }\n  @media (min-width: 1440px) {\n    width: 850px;\n  }\n`;\n\nexport const ProductList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n\n  @media (min-width: 768px) {\n    gap: 32px 16px;\n  }\n`;\n\nexport const ProductsItem = styled.li`\n  width: 335px;\n  height: 141px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  padding: 16px 16px;\n  @media (min-width: 1440px) {\n    width: 405px;\n  }\n`;\n\nexport const RadCircle = styled.div`\n  width: 14px;\n  height: 14px;\n  border-radius: 10px;\n  background: #e9101d;\n  margin-right: 8px;\n  margin-left: 75px;\n  @media (min-width: 768px) {\n    margin-left: 71px;\n  }\n  @media (min-width: 1440px) {\n    margin-left: 141px;\n  }\n`;\n\nexport const GreenCircle = styled.div`\n  width: 14px;\n  height: 14px;\n  border-radius: 10px;\n  background: #419b09;\n  margin-right: 8px;\n  margin-left: 94px;\n  @media (min-width: 768px) {\n    margin-left: 90px;\n  }\n  @media (min-width: 1440px) {\n    margin-left: 160px;\n  }\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 35px;\n  @media (min-width: 768px) {\n    margin-bottom: 27px;\n  }\n`;\n\nexport const DietTitle = styled.h3`\n  padding: 5px 7.5px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  background: rgba(239, 237, 232, 0.05);\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n`;\n\nexport const Recommend = styled.p`\n  margin-right: 16px;\n  font-size: 12px;\n  line-height: 1.5;\n  color: #efede8;\n`;\n\nexport const CaloriesIcon = styled.svg`\n  background-color: #efa082;\n  padding: 4px;\n  border-radius: 50px;\n  width: 20px;\n  height: 20px;\n  margin-right: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const MenuContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nexport const MenuTitle = styled.h2`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  color: #efede8;\n  font-size: 20px;\n  font-weight: 400;\n  line-height: 1.2;\n  width: 250px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1.33;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 330px;\n  }\n`;\n\nexport const DataInfo = styled.ul`\n  display: flex;\n  & li {\n    margin-right: 8px;\n    color: rgba(239, 237, 232, 0.4);\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 1.5;\n    @media screen and (min-width: 768px) {\n      margin-right: 16px;\n    }\n    & span {\n      color: #efede8;\n      margin-left: 4px;\n    }\n  }\n`;\n\nexport const AddIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 8px;\n`;\n\nexport const AddProduct = styled.span`\n  color: #e6533c;\n  font-size: 14px;\n  line-height: 1.3;\n  font-weight: 400;\n  transition: color 300ms;\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.5;\n  }\n`;\n\nexport const BtnAddProduct = styled.button`\n  display: flex;\n  align-items: center;\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n","import styled from '@emotion/styled';\n\nexport const FormField = styled.form`\n  display: block;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 16px;\n  }\n`;\n\nexport const InputProductName = styled.input`\n  width: 287px;\n  height: 34px;\n  margin-bottom: 6px;\n  padding-left: 14px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.3;\n  color: rgba(239, 237, 232, 0.3);\n  background-color: inherit;\n  border-radius: 12px;\n  border: 1px solid #e6533c;\n  outline: none;\n  @media screen and (min-width: 768px) {\n    width: 244px;\n    height: 40px;\n    margin-bottom: 0px;\n  }\n`;\n\nexport const InputProductAmount = styled.input`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0px;\n  width: 287px;\n  height: 34px;\n  padding: 8px 14px 8px 14px;\n\n  background-color: inherit;\n  border-radius: 12px;\n  border: 1px solid #e6533c;\n  outline: none;\n\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.3;\n  color: #efede8;\n  @media screen and (min-width: 768px) {\n    width: 155px;\n    height: 40px;\n  }\n`;\n\nexport const ContainCaloriesDiv = styled.div`\n  display: flex;\n  margin-bottom: 24px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 64px;\n  }\n`;\n\nexport const ContainCaloriesText = styled.span`\n  margin-right: 4px;\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.3;\n`;\n\nexport const ContainCaloriesNumber = styled.span`\n  color: #efede8;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.3;\n`;\n\nexport const ModalBtns = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 768px) {\n    justify-content: start;\n\n    gap: 16px;\n  }\n`;\n\nexport const LabelGrams = styled.label`\n  position: absolute;\n  top: 98px;\n  right: 36px;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.3;\n  color: rgba(239, 237, 232, 0.4);\n\n  @media screen and (min-width: 768px) {\n    top: 61px;\n    right: 46px;\n  }\n`;\n","import {\n  FormField,\n  InputProductName,\n  InputProductAmount,\n  ContainCaloriesDiv,\n  ContainCaloriesText,\n  ContainCaloriesNumber,\n  ModalBtns,\n  LabelGrams,\n} from './ModalAddProduct.styled';\n\nimport { MainButton } from 'components/MainButton/MainButton';\nimport { CustomModal } from 'components/CustomModal/CustomModal';\nimport { useState } from 'react';\nimport { addMeal } from 'services/powerPulseApi';\n\nconst calculateCalories = (calories, amount, weight) => {\n  return Math.ceil((calories / weight) * amount);\n};\n\nexport const ModalAddProduct = ({\n  productInfo,\n  toggleAddModal,\n  toggleSuccessModal,\n}) => {\n  const {\n    title = 'Mango',\n    calories = 67,\n    weight = 100,\n    _id = '5d51694902b2373622ff5bd0',\n  } = productInfo;\n\n  const [amount, setAmount] = useState(0);\n  const totalCalories = calculateCalories(calories, amount, weight);\n\n  const handleAddToDiary = async () => {\n    const mealToSend = {\n      productId: _id,\n      amount,\n      calories: totalCalories,\n    };\n\n    try {\n      await addMeal(mealToSend);\n      toggleSuccessModal();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      toggleAddModal();\n    }\n  };\n\n  return (\n    <CustomModal\n      onClose={toggleAddModal}\n      modalStyles={{\n        width: '335px',\n        height: '280px',\n        padding: '48px  24px',\n        borderRadius: '12px',\n        border: '1px solid rgba(239, 237, 232, 0.20)',\n        background: '#10100F',\n      }}\n      modalTabletStyles={{\n        width: '479px',\n        height: '286px',\n        padding: '48px  32px',\n      }}\n      modalDesktopStyles={{\n        width: '479px',\n        height: '286px',\n        padding: '48px  32px',\n      }}\n    >\n      <FormField>\n        <InputProductName name=\"product\" type=\"text\" value={title} readOnly />\n        <LabelGrams>grams</LabelGrams>\n        <InputProductAmount\n          name=\"amount\"\n          type=\"text\"\n          value={amount}\n          onChange={e => {\n            setAmount(e.target.value);\n          }}\n          autoComplete=\"off\"\n        />\n      </FormField>\n\n      <ContainCaloriesDiv>\n        <ContainCaloriesText>Calories:</ContainCaloriesText>\n        <ContainCaloriesNumber>{totalCalories}</ContainCaloriesNumber>\n      </ContainCaloriesDiv>\n\n      <ModalBtns>\n        <MainButton\n          type=\"button\"\n          text=\"Add to diary\"\n          filled\n          modalButton\n          btnStyles={{ width: 'max-content', letterSpacing: -0.1 }}\n          onClick={handleAddToDiary}\n        />\n        <MainButton\n          type=\"button\"\n          text=\"Cancel\"\n          modalButton\n          onClick={toggleAddModal}\n        />\n      </ModalBtns>\n    </CustomModal>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Calories = styled.p`\n    color: rgba(239, 237, 232, 0.30);\n    margin-bottom: 32px;\n    margin-top: 16px;\n`;\n\nexport const SvgArrov = styled.svg`\n    width: 16px;\n    height: 16px;\n    margin-left: 8px;\n    stroke: rgba(239, 237, 232, 0.30);\n`;\n\nexport const Img = styled.img`\n    width: 123px;\n    height: 97px;\n    margin-right: auto;\n    margin-left: auto;\n`;\n\nexport const LinkToDiary = styled(NavLink)`\n    display: flex;\n    alignItems: center;\n    color: rgba(239, 237, 232, 0.30); \n    margin-right: auto;\n    margin-left: auto;\n`;","import { \n  Calories, \n  SvgArrov, \n  Img, \n  LinkToDiary \n} from './ModalAddProductSuccess.styled';\nimport { CustomModal } from \"components/CustomModal/CustomModal\"; \nimport { MainButton } from \"components/MainButton/MainButton\";\nimport { Title } from \"components/Title/Title\";\nimport ico from '../../assets/icons/svg-sprite.svg';\nimport foodIcon from '../../assets/images/png/food-icon.png';\n\nexport const ModalAddProductSuccess = ({ onClose }) => {\n\n  const handleNextProductClick = () => {\n    onClose();\n  };\n\n  return (\n    <CustomModal\n      modalMobileStyles={{\n          width: '335px',\n          height: '362px',\n          display: 'flex',\n          flexDirection: 'inherit',gap: '16px',\n          alignItems: 'flex-start', \n      }}\n      modalStyles={{\n          width: '430px',\n          height: '428px',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          display: 'flex',\n      }}\n      onClose={onClose}\n    >\n        <Img src={foodIcon} alt=\"Food Icon\" />\n        <Title>{'Well done'}</Title>\n        <Calories>Calories: {}</Calories>\n        <MainButton \n          btnStyles={{marginBottom: \"16px\"}}\n          type=\"button\"\n          text=\"Next product\"\n          modalButton\n          filled\n          onClick={handleNextProductClick}\n        > \n        </MainButton>\n        <LinkToDiary \n          to=\"/diary\">\n          to the diary\n          <SvgArrov>\n            <use href={ico + `#icon-nextarrow`} />\n          </SvgArrov>\n        </LinkToDiary>\n    </CustomModal>\n  );\n};  ","import { getAllProducts } from 'services/powerPulseApi';\nimport { useState, useEffect } from 'react';\nimport {\n  ProductsContainer,\n  ProductList,\n  ProductsItem,\n  RadCircle,\n  GreenCircle,\n  InfoContainer,\n  DietTitle,\n  Recommend,\n  CaloriesIcon,\n  MenuContainer,\n  MenuTitle,\n  DataInfo,\n  AddIcon,\n  AddProduct,\n  BtnAddProduct,\n} from './ProductsList.styled';\nimport { ModalAddProduct } from 'components/ModalAddProduct/ModalAddProduct';\nimport { ModalAddProductSuccess } from 'components/ModalAddProductSuccess/ModalAddProductSuccess';\n\nimport icons from '../../assets/icons/svg-sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { selectUserParams } from 'redux/auth/selectors';\n\nexport const ProductsList = () => {\n  const [products, setProducts] = useState([]);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [isSuccessModal, setSuccessModal] = useState(false);\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { blood } = useSelector(selectUserParams);\n\n  useEffect(() => {\n    async function fetchProducts() {\n      try {\n        const productsList = await getAllProducts();\n        setProducts(productsList);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fetchProducts();\n  }, []);\n\n  const handleModalBtn = products => {\n    setIsAddModalOpen(state => !state);\n    setCurrentProduct(products);\n  };\n\n  const productsToShow = products.slice(0, 20);\n\n  return (\n    <ProductsContainer>\n      {isAddModalOpen && (\n        <ModalAddProduct\n          productInfo={currentProduct}\n          toggleAddModal={() => setIsAddModalOpen(state => !state)}\n        />\n      )}\n      {isSuccessModal && (\n        <ModalAddProductSuccess\n          toggleSuccessModal={() => setSuccessModal(state => !state)}\n        />\n      )}\n      {products.length !== 0 ? (\n        <ProductList>\n          {productsToShow.map(\n            ({\n              calories,\n              category,\n              title,\n              weight,\n              _id,\n              groupBloodNotAllowed,\n            }) => {\n              return (\n                <ProductsItem key={_id}>\n                  <InfoContainer>\n                    <DietTitle>DIET</DietTitle>\n                    {(blood === 1 && groupBloodNotAllowed[1]) ||\n                    (blood === 2 && groupBloodNotAllowed[2]) ||\n                    (blood === 3 && groupBloodNotAllowed[3]) ||\n                    (blood === 4 && groupBloodNotAllowed[4]) ? (\n                      <>\n                        {' '}\n                        <RadCircle />\n                        <Recommend>Not Recommend</Recommend>\n                      </>\n                    ) : (\n                      <>\n                        {' '}\n                        <GreenCircle />\n                        <Recommend>Recommend</Recommend>\n                      </>\n                    )}\n                    <BtnAddProduct\n                      onClick={() =>\n                        handleModalBtn({\n                          calories,\n                          category,\n                          title,\n                          weight,\n                          _id,\n                          groupBloodNotAllowed,\n                        })\n                      }\n                    >\n                      <AddProduct>Add</AddProduct>\n                      <AddIcon>\n                        <svg fill=\"#efede8\">\n                          {' '}\n                          <use href={icons + '#icon-nextarrow'}></use>\n                        </svg>\n                      </AddIcon>\n                    </BtnAddProduct>\n                  </InfoContainer>\n                  <MenuContainer>\n                    <CaloriesIcon>\n                      <svg fill=\"#efede8\">\n                        {' '}\n                        <use href={icons + '#icon-running'}></use>\n                      </svg>\n                    </CaloriesIcon>\n                    <MenuTitle>{title}</MenuTitle>\n                  </MenuContainer>\n                  <DataInfo>\n                    <li>\n                      Calories:<span>{calories}</span>\n                    </li>\n                    <li\n                      style={{\n                        overflow: 'hidden',\n                        whiteSpace: 'nowrap',\n                        textOverflow: 'ellipsis',\n                      }}\n                    >\n                      Category: <span>{category}</span>\n                    </li>\n                    <li>\n                      Weight:<span>{weight}</span>\n                    </li>\n                  </DataInfo>\n                </ProductsItem>\n              );\n            }\n          )}\n        </ProductList>\n      ) : (\n        <p>Sorry, we didn't find any products matching your request.</p>\n      )}\n    </ProductsContainer>\n  );\n};\n","import { Container } from 'components/Container/Container';\nimport { ProductsList } from 'components/ProductsList/ProductsList';\n\nconst ProductsPage = () => {\n  return (\n    <Container>\n      <ProductsList />\n    </Container>\n  );\n};\n\nexport default ProductsPage;"],"names":["MainContainer","styled","Container","children","mq","map","bp","Btn","modalButton","filled","props","btnStyles","MainButton","type","text","disabled","onClick","H1","Title","ProductsContainer","ProductList","ProductsItem","RadCircle","GreenCircle","InfoContainer","DietTitle","Recommend","CaloriesIcon","MenuContainer","MenuTitle","DataInfo","AddIcon","AddProduct","BtnAddProduct","FormField","InputProductName","InputProductAmount","ContainCaloriesDiv","ContainCaloriesText","ContainCaloriesNumber","ModalBtns","LabelGrams","ModalAddProduct","productInfo","toggleAddModal","toggleSuccessModal","title","calories","weight","_id","useState","amount","setAmount","totalCalories","Math","ceil","calculateCalories","handleAddToDiary","mealToSend","productId","addMeal","console","log","CustomModal","onClose","modalStyles","width","height","padding","borderRadius","border","background","modalTabletStyles","modalDesktopStyles","name","value","readOnly","onChange","e","target","autoComplete","letterSpacing","Calories","SvgArrov","Img","LinkToDiary","NavLink","ModalAddProductSuccess","modalMobileStyles","display","flexDirection","gap","alignItems","justifyContent","src","foodIcon","alt","marginBottom","to","href","ico","ProductsList","products","setProducts","isAddModalOpen","setIsAddModalOpen","isSuccessModal","setSuccessModal","currentProduct","setCurrentProduct","blood","useSelector","selectUserParams","useEffect","getAllProducts","productsList","message","fetchProducts","productsToShow","slice","state","length","category","groupBloodNotAllowed","handleModalBtn","fill","icons","style","overflow","whiteSpace","textOverflow"],"sourceRoot":""}