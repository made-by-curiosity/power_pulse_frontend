{"version":3,"file":"static/js/366.5607ff7e.chunk.js","mappings":"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","sources":["components/Title/Title.styled.js","components/Title/Title.jsx","components/DayDashboard/DayDashboard.styled.jsx","components/DayDashboardList/DayDashboardList.styled.jsx","components/DayDashboardList/DayDashboardList.jsx","components/DayDashboard/DayDashboard.jsx","components/DiaryCalendar/DiaryCalendar.styled.jsx","components/DateSwitchButton/DateSwitchButton.styled.jsx","components/DateSwitchButton/DateSwitchButton.jsx","components/Calendar/Calendar.styled.jsx","components/Calendar/Calendar.jsx","components/DiaryCalendar/DiaryCalendar.jsx","components/DiaryTitleContainer/DiaryTitleContainer.styled.jsx","components/DiaryTitleContainer/DiaryTitleContainer.jsx","components/DiaryDashboardContainer/DiaryDashboardContainer.styled.jsx","components/DiaryDashboardContainer/DiaryDashboardContainer.jsx","pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["import  styled  from '@emotion/styled';\n\nexport const H1 = styled.h1`\nfont-family: Roboto;\nfont-size: 24px;\nfont-style: normal;\nfont-weight: 700;\nline-height: 1.16;\n\n @media (min-width: 768px){\nfont-size: 32px;\nline-height: 1.37; \n }\n`\n","import { H1 } from \"./Title.styled\"\nimport PropTypes from 'prop-types';\n\n\nexport const Title = ({ children }) => {\n    return (\n        <H1>{children}</H1>\n    )\n}\n\nTitle.propTypes = {\n  children: PropTypes.string,\n//   margin: PropTypes.number,\n};\n\n","import styled from '@emotion/styled';\n\nexport const DayDashboardCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (min-width: 768px) {\n    max-width: 593px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 390px;\n  }\n`;\n\nexport const WarningCont = styled.div`\n  padding-left: 32px;\n  display: flex;\n  gap: 8px;\n  position: relative;\n\n  @media (min-width: 768px) {\n    padding: 0;\n  }\n`;\n\nexport const WarningIMGWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: #ef8964;\n  border-radius: 50%;\n\n  @media (min-width: 768px) {\n    position: relative;\n  }\n`;\n\nexport const WarningIMG = styled.svg`\n  stroke: #efede8;\n`;\n\nexport const WarningText = styled.p`\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  line-height: 18px;\n  max-width: 303px;\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n    max-width: 561px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 358px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px 13px;\n  margin-bottom: 20px;\n\n  @media (min-width: 768px) {\n    gap: 16px;\n    margin-bottom: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-bottom: 48px;\n  }\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 13px) / 2);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 96px;\n  padding: 14px;\n  justify-content: space-between;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n\n  :nth-of-type(-n + 2) {\n    background: #e6533c;\n  }\n\n  @media (min-width: 768px) {\n    flex-basis: calc((100% - 32px) / 3);\n    order: ${({ order }) => (order ? order : 'unset')};\n  }\n\n  @media (min-width: 1440px) {\n    flex-basis: calc((100% - 16px) / 2);\n    order: unset;\n  }\n`;\n\nexport const CardNameCont = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Title = styled.p`\n  color: ${({ color }) => color};\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n\n  ::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nexport const Value = styled.p`\n  color: #efede8;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 20px;\n\n  @media (min-width: 768px) {\n    line-height: 32px;\n  }\n`;\n\nexport const Imagen = styled.svg`\n  fill: #ef8964;\n`;\n","import sprite from '../../assets/icons/svg-sprite.svg';\nimport {\n  List,\n  Item,\n  Title,\n  CardNameCont,\n  Value,\n  Imagen,\n} from './DayDashboardList.styled';\nimport PropTypes from 'prop-types';\n\nexport const DayDashboardList = ({ data }) => {\n  return (\n    <List>\n      {data.map(({ icon, title }, index) => {\n        const color =\n          index < 2 ? 'rgba(239, 237, 232, 0.8)' : 'rgba(239, 237, 232, 0.4)';\n\n        const order =\n          window.innerWidth >= 768 ? (index % 2 === 0 ? 1 : 2) : index + 1;\n\n        return (\n          <Item key={index} order={order}>\n            <CardNameCont>\n              <Imagen width=\"20\" height=\"20\">\n                <use href={sprite + icon}></use>\n              </Imagen>\n              <Title color={color}>{title}</Title>\n            </CardNameCont>\n            <Value>\n              {0}\n              {index === 1 || index === 5 ? ' min' : \"\"}\n            </Value>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nDayDashboardList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      icon: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import {\n  DayDashboardCont,\n  WarningCont,\n  WarningText,\n  WarningIMG,\n  WarningIMGWrapper,\n} from './DayDashboard.styled';\nimport { DayDashboardList } from 'components/DayDashboardList/DayDashboardList';\nimport sprite from '../../assets/icons/svg-sprite.svg';\n\nexport const DayDashboard = () => {\n  const dashBoardData = [\n    { icon: '#icon-cutlery', title: 'daily calorie intake' },\n    { icon: '#icon-dumbbell', title: 'daily norm of sports' },\n    { icon: '#icon-apple', title: 'calories consumed' },\n    { icon: '#icon-calories', title: 'calories burned' },\n    { icon: '#icon-bubble', title: 'the rest of the calories' },\n    { icon: '#icon-running', title: 'the rest of sports' },\n  ];\n\n  return (\n    <DayDashboardCont>\n      <DayDashboardList data={dashBoardData} />\n      <WarningCont>\n        <WarningIMGWrapper>\n          <WarningIMG width=\"24\" height=\"24\">\n            <use href={sprite + '#icon-warning'}></use>\n          </WarningIMG>\n        </WarningIMGWrapper>\n        <WarningText img={sprite + '#icon-warning'}>\n          Record all your meals in a calorie diary every day. This will help me\n          be aware of my nutrition and make me responsible for my choices.\n        </WarningText>\n      </WarningCont>\n    </DayDashboardCont>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const TitleWrapper = styled.button`\n  display: flex;\n  color: #efede8;\n  font-family: 'Roboto', sans-serif;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 20px;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  background-color: inherit;\n  padding: 0;\n  gap: 8px;\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n    font-weight: 700;\n    line-height: 32px;\n  }\n`;\n\nexport const CalendarIMG = styled.svg`\n  stroke: #ef8964;\n  width: 20px;\n  height: 20px;\n\n  @media (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const DateSwitcherCont = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n\n  @media (min-width: 768px) {\n    gap: 40px;\n  }\n`;\n\nexport const DateSwitcherBtnCont = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;\n","import styled from '@emotion/styled';\n\nexport const DateSwitcherBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  background-color: inherit;\n  padding: 0;\n  cursor: pointer;\n  transform: rotate(270deg);\n\n  svg {\n    stroke: ${({ color }) => color};\n  }\n\n  :last-of-type {\n    transform: rotate(90deg);\n\n    svg {\n      stroke: #efede8;\n    }\n  }\n`;","import { DateSwitcherBtn } from \"./DateSwitchButton.styled\";\nimport sprite from '../../assets/icons/svg-sprite.svg';\nimport PropTypes from 'prop-types';\n\nexport const DateSwitchButton = ({ onClick, disabled, color, icon }) => {\n  return (\n    <DateSwitcherBtn\n      type=\"button\"\n      onClick={onClick}\n      disabled={disabled}\n      color={color}\n    >\n      <svg width=\"16\" height=\"16\">\n        <use href={sprite + icon}></use>\n      </svg>\n    </DateSwitcherBtn>\n  );\n};\n\nDateSwitchButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  color: PropTypes.string,\n  icon: PropTypes.string, \n};","import styled from '@emotion/styled';\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker__wrapper {\n    position: absolute;\n  }\n  .react-datepicker {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: 215px;\n    height: 236px;\n    transform: translate(-15%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    padding: 14px;\n    background-color: #ef8964;\n    font-family: 'Roboto', sans-serif;\n    border-radius: 8px;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 14px;\n    margin-bottom: 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;\n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: normal;\n    margin-bottom: 14px;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    color: rgba(239, 237, 232, 0.5);\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n  }\n  .react-datepicker__navigation {\n    margin-top: 14px;\n    color: white;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: white;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: white;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    flex-shrink: 0;\n    margin: 0;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n    width: 24px;\n    height: 24px;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 5px;\n    flex-direction: column;\n    justify-content: space-between;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: #040404;\n    color: #efede8;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: white;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--outside-month {\n    opacity: 50%;\n  }\n  .react-datepicker__triangle {\n    display: none;\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport { DatePickerWrapper } from './Calendar.styled';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\n\nexport const Calendar = ({ input, selectedDate, setSelectedDate }) => {\n  return (\n    <DatePickerWrapper>\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => {\n          setSelectedDate(date);\n        }}\n        customInput={input}\n        calendarStartDay={1}\n      />\n    </DatePickerWrapper>\n  );\n};\n\nCalendar.propTypes = {\n  input: PropTypes.element.isRequired,\n  selectedDate: PropTypes.instanceOf(Date).isRequired,\n  setSelectedDate: PropTypes.func.isRequired,\n};\n","import { forwardRef, useState } from 'react';\nimport sprite from '../../assets/icons/svg-sprite.svg';\nimport {\n  TitleWrapper,\n  CalendarIMG,\n  DateSwitcherCont,\n  DateSwitcherBtnCont,\n} from './DiaryCalendar.styled';\nimport { format } from 'date-fns';\nimport { DateSwitchButton } from 'components/DateSwitchButton/DateSwitchButton';\nimport { Calendar } from 'components/Calendar/Calendar';\n\nexport const DiaryCalendar = () => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  // eslint-disable-next-line\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const toPreviosDay = () => {\n    const previosDate = new Date(selectedDate);\n    previosDate.setDate(previosDate.getDate() - 1);\n\n    setSelectedDate(previosDate);\n  };\n\n  const toNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n\n    setSelectedDate(nextDate);\n  };\n\n  const CustomInput = forwardRef(({ value, onClick }, ref) => {\n    return (\n      <DateSwitcherCont>\n        <TitleWrapper onClick={onClick} ref={ref}>\n          {format(selectedDate, 'dd/MM/yyyy')}\n          <CalendarIMG>\n            <use href={sprite + '#icon-calendar'}></use>\n          </CalendarIMG>\n        </TitleWrapper>\n        <DateSwitcherBtnCont>\n          <DateSwitchButton\n            onClick={toPreviosDay}\n            disabled={isDisabled}\n            color={isDisabled ? '#EFEDE833' : '#efede8'}\n            icon=\"#icon-chevronup\"\n          />\n          <DateSwitchButton onClick={toNextDay} icon=\"#icon-chevronup\" />\n        </DateSwitcherBtnCont>\n      </DateSwitcherCont>\n    );\n  });\n\n  return (\n    <Calendar\n      input={<CustomInput />}\n      selectedDate={selectedDate}\n      setSelectedDate={setSelectedDate}\n    />\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  padding-top: 40px;\n\n  @media (min-width: 768px) {\n    padding-top: 52px;\n    min-height: 116px;\n    align-items: flex-start;\n\n    h1 {\n      align-self: flex-end;\n    }\n  }\n`;\n","import { Container } from './DiaryTitleContainer.styled';\n\nexport const DiaryTitleContainer = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  padding-top: 40px;\n  gap: 40px;\n\n  @media (min-width: 768px) {\n    padding-top: 32px;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 64px;\n  }\n\n  @media (min-width: 1440px) {\n    padding-top: 32px;\n    flex-direction: row;\n    gap: 0;\n    justify-content: space-between;\n  }\n`;\n","import {Container} from './DiaryDashboardContainer.styled'\n\nexport const DiaryDashboardContainer = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n","import { Container } from 'components/Container/Container';\nimport { DayDashboard } from 'components/DayDashboard/DayDashboard';\nimport { Title } from '../../components/Title/Title';\nimport { DiaryCalendar } from 'components/DiaryCalendar/DiaryCalendar';\nimport { DiaryTitleContainer } from 'components/DiaryTitleContainer/DiaryTitleContainer';\nimport { DiaryDashboardContainer } from 'components/DiaryDashboardContainer/DiaryDashboardContainer';\n\nconst DiaryPage = () => {\n  return (\n    <Container>\n      <DiaryTitleContainer>\n        <Title>{'Diary'}</Title>\n        <DiaryCalendar />\n      </DiaryTitleContainer>\n      <DiaryDashboardContainer>\n        <div>\n          {/* Сюда надо вставить две табилицы (продукты и упражнения) */}\n        </div>\n        <DayDashboard />\n      </DiaryDashboardContainer>\n    </Container>\n  );\n};\n\nexport default DiaryPage;\n"],"names":["H1","styled","Title","children","DayDashboardCont","WarningCont","WarningIMGWrapper","WarningIMG","WarningText","List","Item","order","CardNameCont","color","Value","Imagen","DayDashboardList","data","map","index","icon","title","window","innerWidth","width","height","href","sprite","DayDashboard","img","TitleWrapper","CalendarIMG","DateSwitcherCont","DateSwitcherBtnCont","DateSwitcherBtn","DateSwitchButton","onClick","disabled","type","DatePickerWrapper","Calendar","input","selectedDate","setSelectedDate","selected","onChange","date","customInput","calendarStartDay","DiaryCalendar","useState","Date","isDisabled","toPreviosDay","previosDate","setDate","getDate","toNextDay","nextDate","CustomInput","forwardRef","ref","value","format","Container","DiaryTitleContainer","DiaryDashboardContainer"],"sourceRoot":""}