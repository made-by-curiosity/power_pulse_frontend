{"version":3,"file":"static/js/963.dcd73e1b.chunk.js","mappings":"4OAIMA,EAFc,CAAC,IAAK,IAAK,MAERC,KAAI,SAAAC,GAAE,8CAAqCA,EAArC,UAEhBC,EAAYC,EAAAA,EAAAA,IAAH,+DAKTC,EAAeD,EAAAA,EAAAA,IAAH,+CAIZE,EAAQF,EAAAA,EAAAA,MAAH,mUAET,SAAAG,GAAK,OAAKA,EAAMC,WAAaD,EAAME,SAAW,QAAU,MAAnD,IACJ,SAAAF,GAAK,OAAKA,EAAMC,WAAaD,EAAME,SAAW,IAAM,MAA/C,IAGA,SAAAF,GAAK,OAAKA,EAAMC,WAAaD,EAAME,SAAW,OAAS,MAAlD,IACH,SAAAF,GAAK,OAAKA,EAAMC,WAAaD,EAAME,SAAW,MAAQ,MAAjD,GAKlBT,EAAG,IACI,SAAAO,GAAK,OAAKA,EAAMC,WAAaD,EAAME,SAAW,QAAU,MAAnD,IAEC,SAAAF,GAAK,OAChBA,EAAMC,WAAaD,EAAME,SAAW,OAAS,MAD7B,IAEH,SAAAF,GAAK,OAClBA,EAAMC,WAAaD,EAAME,SAAW,OAAS,KAD3B,IAKXC,EAAcN,EAAAA,EAAAA,MAAH,8YAqBpB,SAAAG,GAAK,OACLA,EAAMI,UAAUC,SAAS,UAAzB,mCADK,IAML,SAAAL,GAAK,OACLA,EAAMI,UAAUC,SAAS,YAAzB,mCADK,GAMJZ,EAAG,IAKJ,SAAAO,GAAK,OAAIA,EAAMM,WAAV,IAGIC,EAAeV,EAAAA,EAAAA,IAAH,yRAerB,SAAAG,GAAK,OACLA,EAAMI,UAAUC,SAAS,UAAzB,iDADK,IAOL,SAAAL,GAAK,OACLA,EAAMI,UAAUC,SAAS,YAAzB,iDADK,IAQIG,EAAkBX,EAAAA,EAAAA,OAAH,4O,sCChGfY,EAAc,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASX,GAAY,YAEtDY,EAMEZ,EANFY,KADF,EAOIZ,EALFa,MAAAA,OAFF,MAEU,GAFV,IAOIb,EAJFc,gBAAAA,OAHF,WAOId,EAHFe,YAAAA,OAJF,WAOIf,EAFFgB,aAAAA,OALF,MAKiB,KALjB,IAOIhB,EADFM,YAAAA,OANF,MAMgB,CAAC,EANjB,EAQQW,EAAwBP,EAAxBO,KAAMC,EAAkBR,EAAlBQ,MAAOC,EAAWT,EAAXS,OACrB,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOnB,EAAP,KAAkBoB,EAAlB,KACA,GAA8CD,EAAAA,EAAAA,WAAS,GAAvD,eAAOE,EAAP,KAAwBC,EAAxB,KACMC,EAAeb,EAAKc,OAAOR,GAC3BS,EAAUf,EAAKe,QAAQT,GAEvBf,EAAWgB,EAAMS,WAAWC,OAAOC,OAAS,EAE5CC,IAAkB7B,GAAaC,GAAawB,EAelD,OACE,UAAC9B,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,CAAOgC,QAASd,EAAMhB,UAAWA,EAAWC,WAAYgB,EAAxD,SACGL,KAEH,SAACV,GAAD,kBACMO,GADN,IAEEsB,GAAIf,EACJL,KAAMU,EAAkB,OAASV,EACjCI,aAAcA,EACdZ,UAAS,UACP0B,EACIN,EACE,UACAV,GAAmB,QACrB,IAENmB,QA/BY,WAClBZ,GAAa,EACd,EA8BOF,OA5BW,SAAAe,GACjBf,EAAOe,GACPb,GAAa,EACd,EA0BOf,YAAaA,KAEdS,IACC,SAACP,EAAD,CAAiBI,KAAK,SAASuB,QA3BlB,WACnBZ,GAAmB,SAAAD,GAAe,OAAKA,CAAL,GACnC,EAyBO,UACE,gBAAKc,MAAO,GAAIC,OAAQ,GAAxB,UACE,gBACEC,KAAI,UAAKC,EAAAA,GAAL,OACFjB,EAAkB,eAAiB,sBAO9CQ,IACC,UAACvB,EAAD,CACE,YAAU,SACVH,UAAS,UAAKoB,EAAe,UAAYV,GAAmB,SAF9D,WAIE,gBAAKsB,MAAO,GAAIC,OAAQ,GAAxB,UACE,gBAAKC,KAAI,UAAKC,EAAAA,EAAL,qBAEVf,GAEGV,GAAe,kBAAeD,EAAM2B,oBAKjD,C,gFCzFK/C,EAFc,CAAC,IAAK,IAAK,MAERC,KAAI,SAAAC,GAAE,8CAAqCA,EAArC,UAEhB8C,EAAM5C,EAAAA,EAAAA,OAAH,ouBAGZ,SAAAG,GACA0C,QAAQC,IAAI3C,EACb,IAEU,gBAAG4C,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAhB,OACTD,EAAeC,EAAS,YAAc,YAAe,WAD5C,IAaS,SAAA7C,GAAK,OAAKA,EAAM6C,OAAS,UAAY,aAAhC,IAGT,SAAA7C,GAAK,OACnBA,EAAM6C,OAAS,UAAY,2BADR,IAQC,SAAA7C,GAAK,OAAKA,EAAM6C,OAAS,UAAY,aAAhC,IACT,SAAA7C,GAAK,OAAKA,EAAM6C,OAAS,UAAY,SAAhC,IAOrB,SAAA7C,GAAK,OAAIA,EAAM8C,SAAV,GAELrD,EAAG,IAEQ,gBAAGmD,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAhB,OACTD,EAAeC,EAAS,YAAc,YAAe,WAD5C,IAGE,gBAAGD,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAhB,OACXD,GAAeC,EAAS,OAAS,MADtB,IAEE,gBAAGD,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAhB,OACbD,GAAeC,EAAS,MAAQ,KADnB,I,SCpDNE,EAAa,SAAC,GAQpB,IAPLnC,EAOI,EAPJA,KACAoC,EAMI,EANJA,KACAH,EAKI,EALJA,OACAI,EAII,EAJJA,SACAH,EAGI,EAHJA,UACAF,EAEI,EAFJA,YACAT,EACI,EADJA,QAEA,OACE,SAACM,EAAD,CACE7B,KAAMA,EACNiC,OAAQA,EACRI,SAAUA,EACVH,UAAWA,EACXF,YAAaA,EACbT,QAASA,EANX,SAQGa,GAGN,C,kJCjBYE,EAAkBrD,EAAAA,GAAAA,GAAH,0IASfsD,EAAqBtD,EAAAA,GAAAA,EAAH,+OAYlBuD,EAAavD,EAAAA,GAAAA,IAAH,8BAIVwD,EAAYxD,EAAAA,GAAAA,IAAH,wBAGTyD,EAAYzD,EAAAA,GAAAA,IAAH,iDAIT0D,EAAiB1D,EAAAA,GAAAA,IAAH,8DASd2D,GAJY3D,EAAAA,GAAAA,IAAH,wCAIEA,EAAAA,GAAAA,IAAH,6MAaR4D,EAAY5D,EAAAA,GAAAA,IAAH,oDAKT6D,EAAW7D,EAAAA,GAAAA,IAAH,0HAUR8D,EAAQ9D,EAAAA,GAAAA,IAAH,gHASL+D,EAAQ/D,EAAAA,GAAAA,IAAH,0IAMK,SAAAG,GAClB,GAAIA,EAAM6D,KAAO,EAAI,MAAQ,SAAY,IAGjCC,EAAQjE,EAAAA,GAAAA,IAAH,0IAMK,SAAAG,GAClB,GAAmB,IAAfA,EAAM6D,KAAa,MAAQ,SAAY,IAInCE,EAAUlE,EAAAA,GAAAA,OAAH,0NAWPmE,EAAUnE,EAAAA,GAAAA,OAAH,+OAePoE,EAAUpE,EAAAA,GAAAA,IAAH,4CAIPqE,EAAcrE,EAAAA,GAAAA,IAAH,2C,4RC5HlBsE,GAA0B,CAC5BC,GAAG,GAGDC,GAAwB,CACxBC,MAAO,UACPC,SAAU,GACV,gBAAiB,CACjBD,MAAO,YAIPE,GAAoB,CAClBF,MAAO,0BACC,gBAAiB,CACfA,MAAO,YAInBG,GAA+B,CAC7BL,IAAK,GAGPM,GAAyB,CACvBH,SAAU,GACVI,WAAY,KAKPC,GAAoB,SAAC,GAA4I,IAA3I/D,EAA0I,EAA1IA,MAAOgE,EAAmI,EAAnIA,mBAAoBC,EAA+G,EAA/GA,iBAAkBC,EAA6F,EAA7FA,aAAcC,EAA+E,EAA/EA,kBAAmBC,EAA4D,EAA5DA,wBAAyBC,EAAmC,EAAnCA,oBAAwBlF,GAAW,aACzK,GAAgBmF,EAAAA,EAAAA,IAASnF,GAAlBU,GAAP,eAEA,OACE,iCACA,WAAC0E,EAAA,EAAD,CAAaC,IAAE,kBAAMlB,IAA4BU,GAAjD,WACE,UAACS,EAAA,EAAD,CAAWtD,GAAItB,EAAMO,KAAMoE,IAAE,kBAAMhB,IAA0BS,GAA7D,SAAkFjE,KAClF,UAAC0E,EAAA,GAAD,kBACQ7E,GADR,IAEI8E,IAAKN,EAFT,SAIGlF,EAAMyF,QAAQ/F,KAAI,SAACgG,GAAD,OACnB,UAACC,EAAA,EAAD,CAEEzE,MAAOwE,EAAOxE,MACdmE,IAAE,kBAAMZ,IAAiCQ,GACzCW,SAAS,UAACC,EAAA,EAAD,CAAOC,KAAK,QAAQT,IAAE,kBAAMb,IAAsBO,KAC3DlE,OAAO,UAACkF,EAAA,EAAD,CAAYV,IAAE,kBAAMX,IAA2BM,GAA/C,SACNU,EAAO7E,SALH6E,EAAOxE,MAFK,WAgB5B,E,WCjDK8E,GAAQ,IAAIC,KACRC,GAAmB,IAAID,KAAKD,GAAMG,cAAgB,GAAIH,GAAMI,WAAYJ,GAAMK,WAElFC,GAAmBC,EAAAA,GAAW,CAClClE,OAAQkE,EAAAA,GAAW,UAChBC,UAAU,2BACVC,SAAS,qCACTC,IAAI,IAAK,kCACTC,SAAS,sBACZC,cAAeL,EAAAA,KACZC,UAAU,2BACVE,IAAI,GAAI,yCACRD,SAAS,6CACTE,SAAS,8BACZE,cAAeN,EAAAA,KACZC,UAAU,2BACVE,IAAI,GAAI,0CACRD,SAAS,qCACTE,SAAS,sBACZG,SAAUP,EAAAA,KACPQ,IAAIb,GAAkB,uCACtBS,SAAS,wBAGDK,GAAa,WACxB,IAUMC,GAASC,EAAAA,EAAAA,GAAc,qBAI3B,GAAwB9F,EAAAA,EAAAA,UAAS,GAAjC,eAAOyC,EAAP,KAAasD,EAAb,KACAzE,QAAQC,IAAIkB,GAEZ,IAKMuD,EAAkB,WACpBD,GAAQ,SAAAE,GAAK,OAAIA,EAAQ,CAAZ,GAChB,EAqBD,OACI,mCACM,UAAC,KAAD,CACEC,cAhDQ,CACpBjF,OAAQ,GACRuE,cAAe,GACfC,cAAe,GACfC,SAAU,GACVS,MAAO,IACPC,OAAQ,OACRC,MAAO,SA0CKnB,iBAAkBA,GAClBoB,SAfK,SAACC,EAAD,GAA8B,IAApBC,EAAmB,EAAnBA,cACZ,IAAT/D,EAVwB,SAAC8D,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cAEvClF,QAAQC,IAAI,oBAAqBgF,GAGjCC,GAAc,EACjB,CAMKC,CAAsBF,EAAQ,CAAEC,cAAAA,IAGhCT,GAAQ,SAAAE,GAAK,OAAIA,EAAQ,CAAZ,GAEhB,EAIS,UAME,WAAC,KAAD,WACY,IAATxD,IAAc,mCACf,UAACX,EAAD,UAAiB,+BACjB,UAACC,EAAD,UAAoB,6LACpB,WAACK,EAAD,YACE,UAACC,EAAD,WACA,UAAC,KAAD,CACE5C,MAAM,SACNI,KAAK,SACLL,KAAK,OACLI,aAAa,MACb8G,UAAWrH,EAAAA,EACXH,YAAa,CAAE8B,MAAO,cAGxB,UAACqB,EAAD,WACA,UAAC,KAAD,CACE5C,MAAM,iBACNI,KAAK,gBACLL,KAAK,OACLI,aAAa,MACb8G,UAAWrH,EAAAA,EACXH,YAAa,CAAE8B,MAAO,cAIxB,UAACqB,EAAD,WACA,UAAC,KAAD,CACE5C,MAAM,iBACNI,KAAK,gBACLL,KAAK,OACLI,aAAa,MACb8G,UAAWrH,EAAAA,EACXH,YAAa,CAAE8B,MAAO,cAGxB,UAACqB,EAAD,WACA,UAAC,KAAD,CACE5C,MAAM,WACNI,KAAK,WACLL,KAAK,OACLI,aAAa,MACb8G,UAAWrH,EAAAA,EACXH,YAAa,CAAE8B,MAAO,iBAI1B,WAAC2B,EAAD,CAASnD,KAAK,SAAd,UAAuB,SACd,iBAAKwB,MAAM,KAAKC,OAAO,KAAM0F,OAAO,UAApC,UACL,iBAAKzF,KAAMC,EAAAA,EAAQ,4BAIZ,IAATsB,IACE,mCACA,UAACX,EAAD,UAAiB,+BACjB,WAACK,EAAD,YACA,UAACD,EAAD,WACA,UAAEsB,GAAF,CACE/D,MAAM,QACNI,KAAK,QACLiE,qBAAqB,EACrBF,kBAAmBiC,EAAS,CAAC1C,SAAS,IAAM,CAACA,SAAS,IACtDO,iBAAkBmC,EAAS,CAAC1C,SAAS,IAAM,CAACA,SAAS,IACrDkB,QAAS,CACP,CAAEvE,MAAO,IAAKL,MAAO,KACrB,CAAEK,MAAO,IAAKL,MAAO,KACrB,CAAEK,MAAO,IAAKL,MAAO,KACrB,CAAEK,MAAO,IAAKL,MAAO,WAIxB,UAACuC,EAAD,WACD,UAAEwB,GAAF,CACE/D,MAAM,SACNI,KAAK,SACLiE,qBAAqB,EACrBF,kBAAmBiC,EAAS,CAAC1C,SAAS,IAAM,CAACA,SAAS,IACtDO,iBAAkBmC,EAAS,CAAC1C,SAAS,IAAM,CAACA,SAAS,IACrDkB,QAAS,CACP,CAAEvE,MAAO,SAAUL,MAAO,UAC1B,CAAEK,MAAO,OAAQL,MAAO,QACxB,CAAEK,MAAO,QAASL,MAAO,kBAK7B,UAACwC,EAAD,WACA,UAAEuB,GAAF,CACE/D,MAAM,QACNI,KAAK,QACLiE,qBAAqB,EACrBF,kBAAmBiC,EAAS,CAAC1C,SAAS,IAAM,CAACA,SAAS,IACtDU,wBAAyBgC,EAAS,CAAC7C,IAAI,GAAK,CAACA,GAAI,IACjDU,iBAAkBmC,EAAS,CAAC7C,GAAG,GAAKG,SAAS,IAAM,CAACH,GAAG,IACvDqB,QAAS,CACP,CAAEvE,MAAO,YAAaL,MAAO,wDAC7B,CAAEK,MAAO,QAASL,MAAO,6DACzB,CAAEK,MAAO,aAAcL,MAAO,mEAC9B,CAAEK,MAAO,OAAQL,MAAO,4DACxB,CAAEK,MAAO,YAAaL,MAAO,gFAQ3B,IAATgD,IACD,mCACA,UAACX,EAAD,UAAiB,eACjB,UAACC,EAAD,UAAoB,4OACpB,WAACc,EAAD,YACE,UAACC,EAAD,WACE,UAACnB,GAAA,EAAD,CACEnC,KAAK,SACLoC,KAAK,KACLH,QAAM,EACNC,UAAW,CAACkF,QAAS,oBAGzB,WAAChE,EAAD,CAAS7B,QAASiF,EAAlB,WACI,iBAAKhF,MAAM,KAAKC,OAAO,KAAM0F,OAAO,UAApC,UACA,iBAAKzF,KAAMC,EAAAA,EAAQ,iBACb,uBAUnB,WAAC0B,EAAD,WAEEJ,EAAO,GAAMA,EAAO,IAAM,WAACG,EAAD,CAAS7B,QAASiF,EAAlB,WACjB,iBAAKhF,MAAM,KAAKC,OAAO,KAAM0F,OAAO,UAApC,UACZ,iBAAKzF,KAAMC,EAAAA,EAAQ,iBACf,WAGDsB,EAAO,GAAKA,EAAO,IAAK,WAACE,EAAD,CAAS5B,QAlLlB,WACpBgF,GAAQ,SAAAE,GAAK,OAAIA,EAAQ,CAAZ,GAEhB,EA+KgC,UAAmC,SAC/C,iBAAKjF,MAAM,KAAKC,OAAO,KAAM0F,OAAO,UAApC,UACf,iBAAKzF,KAAMC,EAAAA,EAAQ,6BAMjB,WAACmB,EAAD,YACI,UAACC,EAAD,CAAOE,KAAMA,KACb,UAACD,EAAD,CAAOC,KAAMA,KACb,UAACC,EAAD,CAAOD,KAAMA,SAQ5B,ECvPD,GAPmB,WACjB,OAAO,UAACjE,EAAA,EAAD,WACN,UAACoH,GAAD,KAGF,C","sources":["components/CustomInput/CustomInput.styled.jsx","components/CustomInput/CustomInput.jsx","components/MainButton/MainButton.styled.jsx","components/MainButton/MainButton.jsx","components/ParamsForm/ParamsForm.styled.js","components/CustomRadio/CustomGroupRadio.jsx","components/ParamsForm/ParamsForm.jsx","pages/ParamsPage/ParamsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst breakpoints = [320, 768, 1440];\n\nconst mq = breakpoints.map(bp => `@media screen and (min-width: ${bp}px)`);\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: ${props => (props.isFocused || props.hasValue ? '-16px' : '16px')};\n  left: ${props => (props.isFocused || props.hasValue ? '0' : '14px')};\n\n  font-family: 'Roboto', sans-serif;\n  font-size: ${props => (props.isFocused || props.hasValue ? '10px' : '14px')};\n  line-height: ${props => (props.isFocused || props.hasValue ? '1.5' : '1.29')};\n  color: rgba(239, 237, 232, 0.6);\n\n  transition: top 0.2s ease-out, left 0.2s ease-out;\n\n  ${mq[1]} {\n    top: ${props => (props.isFocused || props.hasValue ? '-16px' : '15px')};\n\n    font-size: ${props =>\n      props.isFocused || props.hasValue ? '12px' : '16px'};\n    line-height: ${props =>\n      props.isFocused || props.hasValue ? '1.29' : '1.5'};\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  padding: 14px;\n\n  font-size: 14px;\n  line-height: 1.29;\n\n  color: #efede8;\n\n  background-color: inherit;\n\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n\n  outline: none;\n\n  &:hover,\n  &:focus {\n    border-color: #e6533c;\n  }\n\n  ${props =>\n    props.className.includes('valid') &&\n    `\n    border-color: #3CBF61; \n  `}\n\n  ${props =>\n    props.className.includes('invalid') &&\n    `\n    border-color: #D80027; \n  `}\n\n\t  ${mq[1]} {\n    font-size: 16px;\n    line-height: 1.5;\n  }\n\n  ${props => props.inputStyles}\n`;\n\nexport const InputMessage = styled.div`\n  position: absolute;\n  bottom: -16px;\n  left: 0;\n\n  display: flex;\n  align-items: center;\n  gap: 3px;\n\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 1.5;\n  letter-spacing: 0.12px;\n\n  ${props =>\n    props.className.includes('valid') &&\n    `\n    color: #3CBF61; \n    fill: #3CBF61; \n  `}\n\n  ${props =>\n    props.className.includes('invalid') &&\n    `\n    color: #D80027; \n    fill: #D80027; \n  `}\n`;\n\nexport const ShowPasswordBtn = styled.button`\n  width: 20px;\n  height: 20px;\n\n  position: absolute;\n  right: 14px;\n  top: 16px;\n\n  cursor: pointer;\n  border: none;\n  background-color: inherit;\n  padding: 0;\n\n  & svg {\n    stroke: #efede8;\n  }\n`;\n","import { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport {\n  Container,\n  InputWrapper,\n  Label,\n  StyledInput,\n  InputMessage,\n  ShowPasswordBtn,\n} from './CustomInput.styled';\nimport icons from '../../assets/icons/svg-sprite.svg';\n\nexport const CustomInput = ({ field, form, ...props }) => {\n  const {\n    type,\n    label = '',\n    successFeedback = true,\n    passwordBtn = false,\n    autoComplete = 'on',\n    inputStyles = {},\n  } = props;\n  const { name, value, onBlur } = field;\n  const [isFocused, setIsFocused] = useState(false);\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\n  const errorMessage = form.errors[name];\n  const touched = form.touched[name];\n\n  const hasValue = value.toString().trim().length > 0;\n\n  const showFeedback = (!!isFocused && hasValue) || touched;\n\n  const handleFocus = () => {\n    setIsFocused(true);\n  };\n\n  const handleBlur = e => {\n    onBlur(e);\n    setIsFocused(false);\n  };\n\n  const showPassword = () => {\n    setIsPasswordShown(isPasswordShown => !isPasswordShown);\n  };\n\n  return (\n    <Container>\n      <InputWrapper>\n        <Label htmlFor={name} isFocused={isFocused} hasValue={!!value}>\n          {label}\n        </Label>\n        <StyledInput\n          {...field}\n          id={name}\n          type={isPasswordShown ? 'text' : type}\n          autoComplete={autoComplete}\n          className={`${\n            showFeedback\n              ? errorMessage\n                ? 'invalid'\n                : successFeedback && 'valid'\n              : ''\n          }`}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          inputStyles={inputStyles}\n        />\n        {passwordBtn && (\n          <ShowPasswordBtn type=\"button\" onClick={showPassword}>\n            <svg width={20} height={20}>\n              <use\n                href={`${icons}${\n                  isPasswordShown ? '#icon-eyeoff' : '#icon-eye'\n                }`}\n              />\n            </svg>\n          </ShowPasswordBtn>\n        )}\n      </InputWrapper>\n      {showFeedback && (\n        <InputMessage\n          aria-live=\"polite\"\n          className={`${errorMessage ? 'invalid' : successFeedback && 'valid'}`}\n        >\n          <svg width={13} height={13}>\n            <use href={`${icons}#icon-success`} />\n          </svg>\n          {errorMessage\n            ? errorMessage\n            : successFeedback && `Success ${label.toLowerCase()}`}\n        </InputMessage>\n      )}\n    </Container>\n  );\n};\n\n// CustomInput.propTypes = {\n//   label: PropTypes.string,\n//   id: PropTypes.string,\n//   name: PropTypes.string,\n//   className: PropTypes.string,\n// };\n","import styled from '@emotion/styled';\n\nconst breakpoints = [320, 768, 1440];\n\nconst mq = breakpoints.map(bp => `@media screen and (min-width: ${bp}px)`);\n\nexport const Btn = styled.button`\n  cursor: pointer;\n\n  ${props => {\n    console.log(props);\n  }}\n\n  padding: ${({ modalButton, filled }) =>\n    modalButton ? (filled ? '12px 32px' : '12px 36px') : '12px 40px'};\n\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  font-family: 'Roboto', sans-serif;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.13;\n  color: #efede8;\n\n  background-color: ${props => (props.filled ? '#e6533c' : 'transparent')};\n\n  border: 1px solid;\n  border-color: ${props =>\n    props.filled ? '#e6533c' : 'rgba(239, 237, 232, 0.30)'};\n  border-radius: 12px;\n\n  transition: background-color 0.2s ease-out, border-color 0.2s ease-out;\n\n  &:hover:not([disabled]),\n  &:focus:not([disabled]) {\n    background-color: ${props => (props.filled ? '#ef8964' : 'transparent')};\n    border-color: ${props => (props.filled ? '#ef8964' : '#e6533c')};\n  }\n\n  &:disabled {\n    color: rgba(239, 237, 232, 0.6);\n  }\n\n  ${props => props.btnStyles}\n\n  ${mq[1]} {\n    padding: 16px 60px;\n    padding: ${({ modalButton, filled }) =>\n      modalButton ? (filled ? '14px 32px' : '14px 40px') : '16px 60px'};\n\n    font-size: ${({ modalButton, filled }) =>\n      modalButton && filled ? '16px' : '20px'};\n    line-height: ${({ modalButton, filled }) =>\n      modalButton && filled ? '1.5' : '1.2'};\n  }\n`;\n","import { Btn } from './MainButton.styled';\n\nexport const MainButton = ({\n  type,\n  text,\n  filled,\n  disabled,\n  btnStyles,\n  modalButton,\n  onClick,\n}) => {\n  return (\n    <Btn\n      type={type}\n      filled={filled}\n      disabled={disabled}\n      btnStyles={btnStyles}\n      modalButton={modalButton}\n      onClick={onClick}\n    >\n      {text}\n    </Btn>\n  );\n};\n","\n\nimport styled from 'styled-components';\n\n\n\nexport const ParamsFormTitle = styled.h2`\n  color: #EFEDE8;\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n  }\n`\n\nexport const ParamsFormSubTitle = styled.p`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgb(239, 237, 232, 0.3);\n  margin-bottom: 32px;\n  line-height: 1.4;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    max-width: 496px;\n  }\n`\nexport const GenderWrap = styled.div`\n    \n`\n\nexport const LevelWrap = styled.div`\n`\n\nexport const BloodWrap = styled.div`\n    margin-right: 64px;\n`\n\nexport const RadioGroupWrap = styled.div`\nmargin-bottom: 24px;\ndisplay: flex;\n`\n\nexport const InputWrap = styled.div`\ndisplay: flex;\n`\n\nexport const FormWrap = styled.div`\n    max-width: 335px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n    @media screen and (min-width: 768px) {\n    max-width: 527px;\n  }\n  \n`\n\n\nexport const FieldWrap = styled.div`\n      margin-bottom: 32px;\n`\n\n\nexport const StepWrap = styled.div`\n  width: 178px;\n  display: flex;\n  justify-content: space-around;\n  margin-top: 10px;\n\n  \n\n`\n\nexport const Step1 = styled.div`\n  width: 50px;\n  height: 4px;\n  background-color: #EF8964;\n  border-radius: 10px;\n\n`; \n\n\nexport const Step2 = styled.div`\n  width: 50px;\n  height: 4px;\n  background-color: #303030;\n  border-radius: 10px;\n\n  background-color: ${ props => \n   { if (props.step > 1) {return  \"#EF8964\"} }};\n`; \n\nexport const Step3 = styled.div`\n  width: 50px;\n  height: 4px;\n  background-color: #303030;\n  border-radius: 10px;\n\n  background-color: ${ props => \n   { if (props.step === 3) {return  \"#EF8964\"} }};\n`; \n\n\nexport const NextBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    outline: none;\n    border: none;\n    background-color: transparent;\n    color: #EFEDE8;\n`\n\nexport const BackBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    outline: none;\n    border: none;\n    background-color: transparent;\n    color: rgb(239, 237, 232, 0.6);\n   \n`\n\n\n\n\nexport const BtnWrap = styled.div`\n    display: flex;\n`\n\nexport const MainBtnWrap = styled.div`\nmargin-right: 16px;`\n","import Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { Typography } from \"@mui/material\";\n\nimport { useField } from 'formik';\n\n\n\nconst formControlDefaultStyle = {\n    mb:2\n  }\n\nconst formLabelDefaultStyle = {\n      color: '#EFEDE8',\n      fontSize: 14,\n      '&.Mui-focused': {\n      color: '#EFEDE8',\n    }\n    }\n\nconst radioDefaultStyle = {\n        color: 'rgb(239, 237, 232, 0.6)',\n                '&.Mui-checked': {\n                  color: \"#EF8964\",\n                },\n    }\n\nconst formControlLabelDefaultStyle = {\n        mb: -1,\n    }\n\nconst typographyDefaultStyle = {\n        fontSize: 14, \n        lineHeight: 1.3\n    }\n\n\n\nexport const CustomGroupRadio =  ({label, formControlStyling, formLabelStyling, radioStyling, typographyStyling, formControlLabelStyling, radioGroupDirection, ...props}) => {\n    const [field] = useField(props);\n    \n    return (\n      <>\n      <FormControl sx={{...formControlDefaultStyle, ...formControlStyling}}>\n        <FormLabel id={field.name} sx={{...formLabelDefaultStyle, ...formLabelStyling }}>{label}</FormLabel>\n        <RadioGroup\n            {...field}\n            row={radioGroupDirection}\n        >\n          {props.options.map((option) => (\n          <FormControlLabel\n            key={option.value}\n            value={option.value}\n            sx={{...formControlLabelDefaultStyle, ...formControlLabelStyling}}\n            control={<Radio size=\"small\" sx={{...radioDefaultStyle, ...radioStyling}}/>}\n            label={<Typography sx={{...typographyDefaultStyle, ...typographyStyling}}>\n            {option.label}\n          </Typography>}\n          />\n        ))}\n        </RadioGroup>\n      </FormControl>\n      </>\n      \n    )\n}","import {  Step1, Step2, Step3, StepWrap,  FormWrap, ParamsFormTitle, ParamsFormSubTitle,  NextBtn, BtnWrap, MainBtnWrap, BackBtn, FieldWrap, LevelWrap, GenderWrap, BloodWrap, RadioGroupWrap} from \"components/ParamsForm/ParamsForm.styled\"\nimport { useState } from \"react\";\n\nimport icons from '../../assets/icons/svg-sprite.svg';\n\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\n\n\n\nimport { Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { CustomInput } from \"components/CustomInput/CustomInput\";\nimport { CustomGroupRadio } from \"components/CustomRadio/CustomGroupRadio\";\nimport { MainButton } from \"components/MainButton/MainButton\";\n\n\nconst today = new Date();\n    const eighteenYearsAgo = new Date(today.getFullYear() - 18, today.getMonth(), today.getDate());\n\nconst validationSchema = Yup.object({\n  height: Yup.number('Number')\n    .typeError('Height must be a number')\n    .positive('Height must be a positive number.')\n    .min(150, 'Height must be at least 150 cm')\n    .required('Height is required'),\n  currentWeight: Yup.number()\n    .typeError('Height must be a number')\n    .min(35, 'Current weight must be at least 35 kg')\n    .positive('Current weight must be a positive number.')\n    .required('Current weight is required'),\n  desiredWeight: Yup.number()\n    .typeError('Height must be a number')\n    .min(35, 'Desired weight  must be at least 35 kg')\n    .positive('Weight must be a positive number.')\n    .required('Height is required'),\n  birthday: Yup.date()\n    .max(eighteenYearsAgo, 'You must be older than 18 years old')\n    .required('Height is required'),\n});\n\nexport const ParamsForm = () => {\n  const initialValues = {\n    height: \"\",\n    currentWeight: \"\",\n    desiredWeight: \"\",\n    birthday: \"\",\n    blood: \"1\",\n    gender: \"male\",\n    level: \"light\"\n  };\n\n  const tablet = useMediaQuery('(min-width:768px)');\n    \n\n\n    const [step, setStep] = useState(1);\n    console.log(step);\n\n    const handleClickNext = () => {\n        setStep(state => state + 1);\n        \n    }\n\n    const handleClickBack = () => {\n        setStep(state => state - 1);\n    }\n\n    const handleThirdStepSubmit = (values, { setSubmitting }) => {\n    // Ваша логіка для обробки даних третього етапу, наприклад, відправлення їх на сервер\n      console.log(\"dispatchAllValues\", values);\n      \n    // Прибираємо флаг \"завантаження\" після успішної відправки\n      setSubmitting(false);\n  };\n\n\n    const onSubmit = (values, {setSubmitting}) => {\n      if (step === 3) {\n        // Відправка даних на сервер лише на третьому етапі\n        handleThirdStepSubmit(values, { setSubmitting });\n      } else {\n        // Перехід на наступний етап (якщо необхідно)\n        setStep(state => state + 1);\n      }\n    };\n\n    return (\n        <>\n              <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={onSubmit}\n              >\n                \n                <Form>\n                  {step === 1 && <>\n                  <ParamsFormTitle>Get closer to your goals!</ParamsFormTitle>\n                  <ParamsFormSubTitle>To ensure a personalized user experience and the proper functioning of our platform, we ask you to provide the following information about your weight, height and other relevant data:</ParamsFormSubTitle>\n                  <FormWrap>\n                    <FieldWrap>\n                    <Field\n                      label=\"Height\"\n                      name=\"height\"\n                      type=\"text\"\n                      autoComplete=\"off\"\n                      component={CustomInput}\n                      inputStyles={{ width: '155px' }}\n                    />\n                    </FieldWrap>\n                    <FieldWrap>\n                    <Field\n                      label=\"Current Weight\"\n                      name=\"currentWeight\"\n                      type=\"text\"\n                      autoComplete=\"off\"\n                      component={CustomInput}\n                      inputStyles={{ width: '160px' }}\n                    />\n                    </FieldWrap>\n            \n                    <FieldWrap>\n                    <Field\n                      label=\"Desired Weight\"\n                      name=\"desiredWeight\"\n                      type=\"text\"\n                      autoComplete=\"off\"\n                      component={CustomInput}\n                      inputStyles={{ width: '155px' }}\n                    />\n                    </FieldWrap>\n                    <FieldWrap>\n                    <Field\n                      label=\"Birthday\"\n                      name=\"birthday\"\n                      type=\"text\"\n                      autoComplete=\"off\"\n                      component={CustomInput}\n                      inputStyles={{ width: '160px' }}\n                    />\n                    </FieldWrap>\n                  </FormWrap>\n                  <NextBtn type=\"submit\">\n                      Next <svg width=\"20\" height=\"20\"  stroke=\"#E6533C\">\n                      <use href={icons + '#icon-nextarrow'} />\n                      </svg>\n                    </NextBtn>\n                  </>}\n                  { step === 2 && \n                      <>\n                      <ParamsFormTitle>Get closer to your goals!</ParamsFormTitle>\n                      <RadioGroupWrap>\n                      <BloodWrap>\n                      < CustomGroupRadio\n                        label=\"Blood\"\n                        name=\"blood\"\n                        radioGroupDirection={false}\n                        typographyStyling={tablet ? {fontSize:16} : {fontSize:14}}\n                        formLabelStyling={tablet ? {fontSize:16} : {fontSize:14} }\n                        options={[\n                          { value: '1', label: '1' },\n                          { value: '2', label: '2' },\n                          { value: '3', label: '3' },\n                          { value: '4', label: '4' },\n                        ]}\n                      />\n                      </BloodWrap>\n                       <GenderWrap>\n                      < CustomGroupRadio\n                        label=\"Gender\"\n                        name=\"gender\"\n                        radioGroupDirection={false}\n                        typographyStyling={tablet ? {fontSize:16} : {fontSize:14}}\n                        formLabelStyling={tablet ? {fontSize:16} : {fontSize:14} }\n                        options={[\n                          { value: 'female', label: 'Female' },\n                          { value: 'male', label: 'Male' },\n                          { value: 'other', label: 'Other' },\n                        ]}\n                      />\n                      </GenderWrap>\n                      </RadioGroupWrap>\n                      <LevelWrap>\n                      < CustomGroupRadio\n                        label=\"Level\"\n                        name=\"level\"\n                        radioGroupDirection={false}\n                        typographyStyling={tablet ? {fontSize:16} : {fontSize:14}}\n                        formControlLabelStyling={tablet ? {mb:-1} : {mb: 0.5}}\n                        formLabelStyling={tablet ? {mb:0.5, fontSize:16} : {mb:0.5}}\n                        options={[\n                          { value: 'sedentary', label: 'Sedentary lifestyle (little or no physical activity)' },\n                          { value: 'light', label: 'Light activity (light exercises/sports 1-3 days per week)' },\n                          { value: 'moderately', label: 'Moderately active (moderate exercises/sports 3-5 days per week)' },\n                          { value: 'very', label: 'Very active (intense exercises/sports 6-7 days per week)' },\n                          { value: 'extremely', label: 'Extremely active (very strenuous exercises/sports and physical work)' },\n                        ]}\n                      />\n                      </LevelWrap>\n                      \n                      </>\n                     \n                    }\n                  {step === 3 && \n                  <>\n                  <ParamsFormTitle>Dear User</ParamsFormTitle>\n                  <ParamsFormSubTitle>Thank you for filling in all the required data. We greatly appreciate your cooperation and commitment to a healthy lifestyle. The collected information will allow us to provide you with a more individual and personalized approach.</ParamsFormSubTitle>\n                  <BtnWrap>\n                    <MainBtnWrap>\n                      <MainButton \n                        type='submit'\n                        text='Go'\n                        filled\n                        btnStyles={{display: \"inline-flex\"}}\n                      />\n                    </MainBtnWrap>\n                    <BackBtn onClick={handleClickBack}>\n                        <svg width=\"20\" height=\"20\"  stroke=\"#E6533C\">\n                        <use href={icons + '#icon-back'} /> \n                        </svg> Back\n                    </BackBtn>\n                  </BtnWrap>\n                  </>\n                  }\n              </Form>\n            </Formik>\n            \n\n\n           <BtnWrap>\n          \n           { step > 1  && step < 3 &&  <BackBtn onClick={handleClickBack}>\n                      <svg width=\"20\" height=\"20\"  stroke=\"#E6533C\">\n          <use href={icons + '#icon-back'} /> \n        </svg> Back\n            </BackBtn>}\n            \n            {step > 1 && step < 3 && <NextBtn onClick={handleClickNext}>\n                    Next <svg width=\"20\" height=\"20\"  stroke=\"#E6533C\">\n          <use href={icons + '#icon-nextarrow'} />\n        </svg>\n            </NextBtn>}\n          </BtnWrap>\n           \n            \n            <StepWrap>\n                <Step1 step={step}></Step1>\n                <Step2 step={step}></Step2>\n                <Step3 step={step}></Step3>\n            </StepWrap>\n\n            \n        </>\n        \n       \n    )\n}\n\n\n\n\n\n\n  \n","import { Container } from 'components/Container/Container';\n\nimport { ParamsForm } from 'components/ParamsForm/ParamsForm';\n\nconst ParamsPage = () => {\n  return <Container>\n   <ParamsForm/>\n            \n          </Container>;\n};\n\nexport default ParamsPage;\n"],"names":["mq","map","bp","Container","styled","InputWrapper","Label","props","isFocused","hasValue","StyledInput","className","includes","inputStyles","InputMessage","ShowPasswordBtn","CustomInput","field","form","type","label","successFeedback","passwordBtn","autoComplete","name","value","onBlur","useState","setIsFocused","isPasswordShown","setIsPasswordShown","errorMessage","errors","touched","toString","trim","length","showFeedback","htmlFor","id","onFocus","e","onClick","width","height","href","icons","toLowerCase","Btn","console","log","modalButton","filled","btnStyles","MainButton","text","disabled","ParamsFormTitle","ParamsFormSubTitle","GenderWrap","LevelWrap","BloodWrap","RadioGroupWrap","FormWrap","FieldWrap","StepWrap","Step1","Step2","step","Step3","NextBtn","BackBtn","BtnWrap","MainBtnWrap","formControlDefaultStyle","mb","formLabelDefaultStyle","color","fontSize","radioDefaultStyle","formControlLabelDefaultStyle","typographyDefaultStyle","lineHeight","CustomGroupRadio","formControlStyling","formLabelStyling","radioStyling","typographyStyling","formControlLabelStyling","radioGroupDirection","useField","FormControl","sx","FormLabel","RadioGroup","row","options","option","FormControlLabel","control","Radio","size","Typography","today","Date","eighteenYearsAgo","getFullYear","getMonth","getDate","validationSchema","Yup","typeError","positive","min","required","currentWeight","desiredWeight","birthday","max","ParamsForm","tablet","useMediaQuery","setStep","handleClickBack","state","initialValues","blood","gender","level","onSubmit","values","setSubmitting","handleThirdStepSubmit","component","stroke","display"],"sourceRoot":""}