{"version":3,"file":"static/js/515.ee127cdb.chunk.js","mappings":"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","sources":["components/ButtonGoogle/ButtonGoogle.styled.js","components/ButtonGoogle/ButtonGoogle.jsx","components/CustomInput/CustomInput.styled.jsx","components/CustomInput/CustomInput.jsx","components/SingInForm/SingInForm.styled.js","components/Title/Title.styled.js","components/Title/Title.jsx","components/SignUpForm/SignUpForm.styled.jsx","components/SignUpForm/SignUpForm.jsx","pages/SignUpPage/SignUpPage.jsx","services/googleOAuth.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  padding: 12px 5px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 2px;\n\n  color: #ffffff;\n\n  cursor: pointer;\n\n  border: 1px solid #ffffff;\n\n  border-radius: 12px;\n\n  transition: opacity 200ms ease-out;\n\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n\n  @media (min-width: 768px) {\n    padding: 18px 35px;\n    gap: 5px;\n  }\n`;\n\nexport const SvgGoogle = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: #efede8;\n\n  @media (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const SpanGoogle = styled.span`\n  font-family: 'Roboto', sans-serif;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.13;\n\n  color: #000000;\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import icons from '../../assets/icons/svg-sprite.svg';\nimport { Button, SpanGoogle, SvgGoogle } from './ButtonGoogle.styled';\n\nexport const ButtonGoogle = ({ children, handleClick }) => {\n  return (\n    <Button type=\"button\" onClick={handleClick}>\n      <SvgGoogle>\n        <use href={icons + '#icon-google'}></use>\n      </SvgGoogle>\n      <SpanGoogle>{children}</SpanGoogle>\n    </Button>\n  );\n};\n","import styled from '@emotion/styled';\n\nconst breakpoints = [320, 768, 1440];\n\nconst mq = breakpoints.map(bp => `@media screen and (min-width: ${bp}px)`);\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: ${props => (props.isFocused || props.hasValue ? '-16px' : '16px')};\n  left: ${props => (props.isFocused || props.hasValue ? '0' : '14px')};\n\n  font-family: 'Roboto', sans-serif;\n  font-size: ${props => (props.isFocused || props.hasValue ? '10px' : '14px')};\n  line-height: ${props => (props.isFocused || props.hasValue ? '1.5' : '1.29')};\n  color: rgba(239, 237, 232, 0.6);\n\n  transition: top 0.2s ease-out, left 0.2s ease-out;\n\n  ${mq[1]} {\n    top: ${props => (props.isFocused || props.hasValue ? '-16px' : '15px')};\n\n    font-size: ${props =>\n      props.isFocused || props.hasValue ? '12px' : '16px'};\n    line-height: ${props =>\n      props.isFocused || props.hasValue ? '1.29' : '1.5'};\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  padding: 14px;\n\n  font-size: 14px;\n  line-height: 1.29;\n\n  color: #efede8;\n\n  background-color: inherit;\n\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n\n  outline: none;\n\n  &:hover,\n  &:focus {\n    border-color: #e6533c;\n    & ~ svg {\n      stroke: #e6533c;\n    }\n  }\n\n  ${props =>\n    props.className.includes('valid') &&\n    `\n    border-color: #3CBF61;\n\t\t& ~ svg {\n      stroke: #3CBF61;\n    }\n  `}\n\n  ${props =>\n    props.className.includes('invalid') &&\n    `\n    border-color: #D80027;\n\t\t& ~ svg {\n      stroke: #D80027;\n    }\n  `}\n\n\t  ${mq[1]} {\n    font-size: 16px;\n    line-height: 1.5;\n  }\n\n  ${props => props.inputStyles}\n`;\n\nexport const InputMessage = styled.div`\n  position: absolute;\n  bottom: -16px;\n  left: 0;\n\n  display: flex;\n  align-items: center;\n  gap: 3px;\n\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 1.5;\n  letter-spacing: 0.12px;\n\n  ${props =>\n    props.className.includes('valid') &&\n    `\n    color: #3CBF61; \n    fill: #3CBF61; \n  `}\n\n  ${props =>\n    props.className.includes('invalid') &&\n    `\n    color: #D80027; \n    fill: #D80027; \n  `}\n`;\n\nexport const ShowPasswordBtn = styled.button`\n  width: 20px;\n  height: 20px;\n\n  position: absolute;\n  right: 14px;\n  top: 16px;\n\n  cursor: pointer;\n  border: none;\n  background-color: inherit;\n  padding: 0;\n\n  & svg {\n    stroke: #efede8;\n  }\n`;\n\nexport const CalendarIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n\n  position: absolute;\n  right: 14px;\n  top: 17px;\n\n  stroke: #efede8;\n\n  z-index: -1;\n`;\n","import { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport {\n  Container,\n  InputWrapper,\n  Label,\n  StyledInput,\n  InputMessage,\n  ShowPasswordBtn,\n  CalendarIcon,\n} from './CustomInput.styled';\nimport icons from '../../assets/icons/svg-sprite.svg';\n\nexport const CustomInput = ({\n  calendar,\n  field,\n  form,\n  reference,\n  onClick,\n  valueDate,\n  readOnly,\n  ...props\n}) => {\n  const {\n    type,\n    label = '',\n    successFeedback = true,\n    passwordBtn = false,\n    autoComplete = 'on',\n    inputStyles = {},\n  } = props;\n  const { name, value, onBlur } = field;\n  const [isFocused, setIsFocused] = useState(false);\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\n  const errorMessage = form.errors[name];\n  const touched = form.touched[name];\n\n  const hasValue = value.toString().trim().length > 0;\n\n  const showFeedback = (!!isFocused && hasValue) || touched;\n\n  const handleFocus = () => {\n    setIsFocused(true);\n  };\n\n  const handleBlur = e => {\n    onBlur(e);\n    setIsFocused(false);\n  };\n\n  const showPassword = () => {\n    setIsPasswordShown(isPasswordShown => !isPasswordShown);\n  };\n\n  return (\n    <Container>\n      <InputWrapper>\n        <Label htmlFor={name} isFocused={isFocused} hasValue={!!value}>\n          {label}\n        </Label>\n        <StyledInput\n          {...field}\n          id={name}\n          ref={reference}\n          type={isPasswordShown ? 'text' : type}\n          autoComplete={autoComplete}\n          className={`${\n            showFeedback\n              ? errorMessage\n                ? 'invalid'\n                : successFeedback && 'valid'\n              : ''\n          }`}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onClick={onClick}\n          inputStyles={inputStyles}\n          readOnly={readOnly}\n        />\n        {passwordBtn && (\n          <ShowPasswordBtn type=\"button\" onClick={showPassword}>\n            <svg width={20} height={20}>\n              <use\n                href={`${icons}${\n                  isPasswordShown ? '#icon-eyeoff' : '#icon-eye'\n                }`}\n              />\n            </svg>\n          </ShowPasswordBtn>\n        )}\n        {calendar && (\n          <CalendarIcon fill=\"transparent\">\n            <use href={`${icons}#icon-calendar`} />\n          </CalendarIcon>\n        )}\n      </InputWrapper>\n      {showFeedback && (\n        <InputMessage\n          aria-live=\"polite\"\n          className={`${errorMessage ? 'invalid' : successFeedback && 'valid'}`}\n        >\n          <svg width={13} height={13}>\n            <use href={`${icons}#icon-success`} />\n          </svg>\n          {errorMessage\n            ? errorMessage\n            : successFeedback && `Success ${label.toLowerCase()}`}\n        </InputMessage>\n      )}\n    </Container>\n  );\n};\n\n// CustomInput.propTypes = {\n//   label: PropTypes.string,\n//   id: PropTypes.string,\n//   name: PropTypes.string,\n//   className: PropTypes.string,\n// };\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ContainerSingIn = styled.div`\n  max-width: 335px;\n  margin-top: 30px;\n\n  @media (min-width: 768px) {\n    width: 364px;\n    margin-top: 60px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-top: 116px;\n  }\n`;\n\nexport const ContainerField = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const Text = styled.p`\n  font-family: Roboto;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.28;\n  color: #efede84d;\n  margin-bottom: 28px;\n  margin-top: 14px;\n\n  @media (min-width: 768px) {\n    width: 496px;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 16px;\n    line-height: 1.5;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  width: max-content;\n\n  display: flex;\n  flex-direction: column;\n\n  gap: 10px;\n\n  @media (min-width: 768px) {\n  }\n`;\n\nexport const TextBtn = styled.span`\n  font-family: Roboto;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 1.12;\n  color: #efede8;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const TextSingUp = styled.p`\n  font-family: Roboto;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.5;\n  color: rgba(239, 237, 232, 0.6);\n`;\n\nexport const LinkSingUp = styled(Link)`\n  font-family: Roboto;\n  font-size: 12px;\n  line-height: 150%;\n  text-decoration-line: underline;\n  margin-left: 5px;\n  color: #efede8;\n`;\n\nexport const DivSingUp = styled.div`\n  display: flex;\n  margin-top: 12px;\n\n  @media (min-width: 768px) {\n    margin-left: 7px;\n  }\n`;\n","import  styled  from '@emotion/styled';\n\nexport const H1 = styled.h1`\nfont-family: Roboto;\nfont-size: 24px;\nfont-style: normal;\nfont-weight: 700;\nline-height: 1.16;\n\n @media (min-width: 768px){\nfont-size: 32px;\nline-height: 1.37; \n }\n  @media (min-width: 1440px){\n \n\n }\n`\n","import { H1 } from \"./Title.styled\"\nimport PropTypes from 'prop-types';\n\n\nexport const Title = ({ children }) => {\n    return (\n        <H1>{children}</H1>\n    )\n}\n\nTitle.propTypes = {\n  children: PropTypes.string,\n//   margin: PropTypes.number,\n};\n\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const RegisterContainer = styled.div`\n  margin-top: 30px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 60px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 116px;\n  }\n`;\n\nexport const RegisterForm = styled(Form)`\n  max-width: 335px;\n  margin-bottom: 12px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n\n  @media screen and (min-width: 768px) {\n    width: 364px;\n  }\n`;\n\nexport const Title = styled.h2``;\nexport const Text = styled.p`\n  color: ${props => props.theme.colors.secondTextColor};\n  margin: 20px 0;\n  font-size: 14px;\n  line-height: 1.3;\n  @media screen and (min-width: 768px) {\n    margin: 24px 0;\n    max-width: 496px;\n    font-size: 16px;\n    line-height: 1.5;\n  }\n`;\n\nexport const SecondText = styled.p`\n  color: #efede899;\n  font-size: 12px;\n  line-height: 1.5;\n`;\n\n// export const BgImg = styled.img`\n//   width: 446px;\n//   height: 669px;\n//   position: absolute;\n//   bottom: -114%;\n//   left: 0;\n//   z-index: -1;\n// `;\n","import React from 'react';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { Title } from 'components/Title/Title';\n\nimport {\n  RegisterContainer,\n  RegisterForm,\n  Text,\n  SecondText,\n} from './SignUpForm.styled';\nimport { CustomInput } from 'components/CustomInput/CustomInput';\nimport { MainButton } from 'components/MainButton/MainButton';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from 'redux/auth/operations';\nimport { ButtonGoogle } from 'components/ButtonGoogle/ButtonGoogle';\nimport { BtnWrapper } from 'components/SingInForm/SingInForm.styled';\nimport { googleOAuth } from 'services/googleOAuth';\n\nconst emailRegex = /^\\w+(\\.?\\w+)?@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\nconst passwordRegex =\n  /^(?=.*\\d)(?=.*[a-zA-Z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,32}$/;\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string().required('Required field'),\n  email: Yup.string()\n    .matches(emailRegex, 'Invalid email format')\n    .required('Required field'),\n  password: Yup.string()\n    .matches(passwordRegex, 'Must contain at least 1 capital and 1 digit')\n    .required('Required field'),\n});\n\nexport const SignUpForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(signUp(values));\n\n    resetForm();\n  };\n\n  return (\n    <RegisterContainer>\n      <Title>Sign Up</Title>\n      <Text>\n        Thank you for your interest in our platform. To complete the\n        registration process, please provide us with the following information.\n      </Text>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={handleSubmit}\n      >\n        <RegisterForm>\n          <Field\n            name=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            autoComplete=\"off\"\n            component={CustomInput}\n          />\n\n          <Field\n            name=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            autoComplete=\"off\"\n            component={CustomInput}\n          />\n\n          <Field\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            autoComplete=\"off\"\n            component={CustomInput}\n            passwordBtn\n          />\n          <BtnWrapper>\n            <MainButton\n              type=\"submit\"\n              text=\"Sign Up\"\n              filled\n              btnStyles={{ width: 'max-content' }}\n            />\n            <ButtonGoogle handleClick={googleOAuth}>With Google</ButtonGoogle>\n          </BtnWrapper>\n        </RegisterForm>\n      </Formik>\n      <SecondText>\n        Already have account?{' '}\n        <Link\n          style={{ color: '#EFEDE8', textDecorationLine: 'underline' }}\n          to=\"/signin\"\n        >\n          Sign In\n        </Link>\n      </SecondText>\n    </RegisterContainer>\n  );\n};\n","import { Container } from 'components/Container/Container';\nimport React from 'react';\nimport { SignUpForm } from 'components/SignUpForm/SignUpForm';\nimport { BackgroundImg } from 'components/BackgroundImg/BackgroundImg';\nimport { LogoWrapper } from 'components/LogoWrapper/LogoWrapper';\nimport { Logo } from 'components/NewHeader/Logo/Logo';\nimport { useLocation } from 'react-router-dom';\n\nconst SignUpPage = () => {\n  const location = useLocation();\n\n  const is404 = location.pathname === '/404';\n  return (\n    <BackgroundImg>\n      <Container>\n        <LogoWrapper>\n          <Logo is404={is404} />\n        </LogoWrapper>\n        <SignUpForm />\n      </Container>\n    </BackgroundImg>\n  );\n};\n\nexport default SignUpPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://power-pulse.onrender.com';\n\n// const BASE_URL = 'http://localhost:3030';\n\naxios.defaults.baseURL = BASE_URL;\n\nconst navigeteFn = url => {\n  window.location.href = url;\n};\n\nexport const googleOAuth = async () => {\n  const res = await axios.post(`${BASE_URL}/api/auth/request`);\n  const { data } = res;\n  navigeteFn(data.url);\n};\n"],"names":["Button","styled","SvgGoogle","SpanGoogle","ButtonGoogle","children","handleClick","type","onClick","href","icons","mq","map","bp","Container","InputWrapper","Label","props","isFocused","hasValue","StyledInput","className","includes","inputStyles","InputMessage","ShowPasswordBtn","CalendarIcon","CustomInput","calendar","field","form","reference","readOnly","valueDate","label","successFeedback","passwordBtn","autoComplete","name","value","onBlur","useState","setIsFocused","isPasswordShown","setIsPasswordShown","errorMessage","errors","touched","toString","trim","length","showFeedback","htmlFor","id","ref","onFocus","e","width","height","fill","toLowerCase","ContainerSingIn","ContainerField","Text","BtnWrapper","TextSingUp","LinkSingUp","Link","DivSingUp","H1","Title","RegisterContainer","RegisterForm","Form","theme","colors","secondTextColor","SecondText","SignupSchema","Yup","shape","required","email","matches","password","SignUpForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","signUp","component","MainButton","text","filled","btnStyles","googleOAuth","style","color","textDecorationLine","to","is404","useLocation","pathname","BackgroundImg","LogoWrapper","Logo","BASE_URL","axios","res","data","url","window","location"],"sourceRoot":""}